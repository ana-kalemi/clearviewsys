{"version":3,"sources":["hooks/useLocationHash.js","hooks/useTokenStorage.js","hooks/useConfig.js","hooks/useCatalog.js","components/TokenModal.js","pages/RateBoard/WeatherWidget.js","pages/RateBoard/RateBoard.js","pages/Config/styles.js","pages/Config/ColumnCard.js","pages/Config/useConfigReducer.js","pages/Config/Config.js","App.js","reportWebVitals.js","index.js"],"names":["useLocationHash","useState","window","location","hash","setHash","useEffect","onhashchange","event","target","useTokenStorage","state","setState","searchParams","URLSearchParams","href","split","has","get","localStorage","getItem","initToken","token","confirm","setItem","useConfig","config","setConfig","getConfig","a","configURL","axios","headers","res","data","cleanCatalog","catalog","timestamp","TIMESTAMP","rates","RATE","map","rate","isFlagged","ISFLAGGED","flagURL","FLAGURL","flag","iso","ISO","name","NAME","country","COUNTRY","id","ID","weBuy","WEBUY","weSell","WESELL","invBuy","INVBUY","invSell","INVSELL","useCatalog","setCatalog","getCatalog","ratesURL","parseXML","xml","CATALOG","interval","setInterval","clearInterval","Modal","styled","BaseModal","Fade","BaseFade","ModalPaper","Paper","TokenModal","open","onSuccess","setToken","loading","setLoading","error","setError","isValidToken","onFormSubmit","preventDefault","isValid","closeAfterTransition","in","elevation","onSubmit","Grid","container","direction","justify","alignItems","spacing","item","TextField","variant","label","value","onChange","helperText","CircularProgress","Button","type","Title","h3","CurrentTemp","MinMaxTemp","h5","getWeather","units","apiKey","setWeather","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","iconSrc","weather","icon","main","temp","Math","round","tempMin","temp_min","tempMax","temp_max","WeatherWidget","tempSuffix","metric","imperial","standard","_interval","src","alt","Container","div","props","colour","Image","img","CarouselImage","FlagImageCell","size","FontCell","PaperContainer","ColouredTableCell","TableCell","fontColour","borderColour","cellDisplay","column","row","key","ImageCarousel","items","stopAutoPlayOnHover","swipe","indicators","navButtonsAlwaysInvisible","Number","i","RateBoard","removeToken","allRates","setAllRates","isAllRates","filter","length","setTimeout","firstRate","shift","rowsInterval","slice","maxRows","tableHead","tableColumns","backgroundColour","logo","carouselPosition","carouselImages","carouselInterval","weatherPosition","xs","style","backgroundColor","weatherBackgroundColour","color","weatherFontColour","weatherApiKey","weatherUnits","weatherInterval","TableContainer","Table","TableHead","datePosition","includes","TableRow","align","colSpan","headerColour","dividerColour","onClick","col","width","title","TableBody","oddColour","evenColour","TableFooter","footerColour","font","IconHover","display","ColumnCard","onColumnShift","onColumnRemove","onColumnChange","isFirst","isLast","ArrowBack","Delete","ArrowForward","FormControl","fullWidth","InputLabel","Select","labelId","e","MenuItem","reducer","_state","action","JSON","parse","stringify","defaultPayload","payload","default","current","_items","index","splice","changeArrayObject","shiftArrayObject","removeArrayObject","useConfigReducer","useReducer","dispatch","dispatcher","setDefault","defaultConfig","onPushArray","onChangeArrayObject","objKey","onShiftArray","onRemoveArrayObject","onReset","SubTitle","h2","PaperCard","BaseAddContainer","AddColumnContainer","AddCarouselImageContainer","CenterButtonContainer","TextFieldContainer","colourColumns","miscColumns","options","weatherColumns","Config","showPreview","setShowPreview","tabValue","setTabValue","padding","Tabs","indicatorColor","textColor","centered","Tab","fontSize","AddCircle","defaultValue","TextFieldProps","SettingsBackupRestore","wrap","flexGrow","marginRight","option","image","x","fileDownload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.406f8426.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nconst useLocationHash = () => {\r\n    const [hash, setHash] = useState(window.location.hash);\r\n\r\n    useEffect(() => {\r\n      window.onhashchange = (event => {\r\n        setHash(event.target.location.hash)\r\n      })\r\n    }, [])\r\n\r\n    return hash\r\n  }\r\n\r\nexport default useLocationHash","import { useState, useEffect } from 'react'\r\n\r\nconst initToken = () => {\r\n  const searchParams = new URLSearchParams(window.location.href.split('?')[1])\r\n  if (searchParams.has('token')) {\r\n    return searchParams.get('token')\r\n  } \r\n  return localStorage.getItem('token')\r\n}\r\n\r\nconst useTokenStorage = () => {\r\n  const [state, setState] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setState(initToken())\r\n  }, [])\r\n\r\n  const setToken = (token) => {\r\n    const confirmMessage = 'Are you sure you want to remove your token?'\r\n    if (token === '' && !window.confirm(confirmMessage)) {\r\n      return null;\r\n    }\r\n    localStorage.setItem('token', token)\r\n    setState(token)\r\n  }\r\n\r\n  return [state, setToken]\r\n}\r\n\r\nexport default useTokenStorage","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst useConfig = (token) => {\r\n  const [config, setConfig] = useState({});\r\n\r\n  const getConfig = async () => {\r\n    if (!token) return\r\n\r\n    let configURL = `https://www.clearviewsys.com/rates/${token}/config.json`;\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      configURL = 'config.json'\r\n    }\r\n  \r\n    const res = await axios.get(configURL, {\r\n      headers: { 'Cache-Control': 'no-cache' }\r\n    });\r\n    setConfig(res.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, [token]);\r\n\r\n  return config;\r\n}\r\n\r\nexport default useConfig","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { parseStringPromise as parseXML } from 'xml2js';\r\n\r\nconst cleanCatalog = (catalog) => {\r\n  const timestamp = catalog.TIMESTAMP[0];\r\n  const rates = catalog.RATE.map(rate => ({\r\n    isFlagged: rate.ISFLAGGED[0] === '**',\r\n    flagURL: rate.FLAGURL[0],\r\n    flag: rate.FLAGURL[0],\r\n    iso: rate.ISO[0],\r\n    name: rate.NAME[0],\r\n    country: rate.COUNTRY[0],\r\n    id: rate.ID ? rate.ID[0] : '',\r\n    weBuy: rate.WEBUY[0],\r\n    weSell: rate.WESELL[0],\r\n    invBuy: rate.INVBUY[0],\r\n    invSell: rate.INVSELL[0]\r\n  }));\r\n\r\n  return { timestamp, rates }\r\n}\r\n\r\nconst useCatalog = (token) => {\r\n  const [catalog, setCatalog] = useState({});\r\n\r\n  const getCatalog = async () => {\r\n    if (!token) return\r\n    \r\n    let ratesURL = `https://www.clearviewsys.com/rates/${token}/rateswithcss.xml`;\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      ratesURL = 'rateswithcss.xml'\r\n    }\r\n    \r\n    const res = await axios.get(ratesURL, {\r\n      headers: { 'Cache-Control': 'no-cache' }\r\n    });\r\n    const xml = await parseXML(res.data);\r\n    setCatalog(cleanCatalog(xml.CATALOG));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCatalog()\r\n    const interval = setInterval(() => getCatalog(), 5000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [token])\r\n\r\n  return catalog\r\n}\r\n\r\nexport default useCatalog","import { useState } from 'react'\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Modal as BaseModal,\r\n  Fade as BaseFade,\r\n  TextField,\r\n  Button,\r\n  CircularProgress\r\n} from '@material-ui/core'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\n\r\nconst Modal = styled(BaseModal)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\nconst Fade = styled(BaseFade)`\r\n  :focus-visible {\r\n    outline: none;\r\n  }\r\n`\r\nconst ModalPaper = styled(Paper)`\r\n  padding: 1rem;\r\n`\r\n\r\nconst TokenModal = ({ open, onSuccess }) => {\r\n  const [token, setToken] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  const isValidToken = async () => {\r\n    let configURL = `https://www.clearviewsys.com/rates/${token}/config.json`;\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      configURL = 'config.json'\r\n    }\r\n  \r\n    try {\r\n      await axios.get(configURL, {\r\n        headers: { 'Cache-Control': 'no-cache' }\r\n      });\r\n      return true\r\n    } catch {\r\n      return false\r\n    }\r\n  }\r\n\r\n  const onFormSubmit = async (event) => {\r\n    event.preventDefault()\r\n    setLoading(true)\r\n\r\n    const isValid = await isValidToken()\r\n    setLoading(false)\r\n    \r\n    if (isValid) {\r\n      onSuccess(token)\r\n    } else {\r\n      setError('Invalid Token')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      closeAfterTransition\r\n    >\r\n      <Fade in={open}>\r\n        <ModalPaper elevation={3}>\r\n          <form onSubmit={onFormSubmit}>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              spacing={2}\r\n            >\r\n              <Grid item>\r\n                <TextField \r\n                  variant=\"outlined\" \r\n                  label=\"Token\"\r\n                  value={token}\r\n                  onChange={event => setToken(event.target.value)}\r\n                  error={!!error}\r\n                  helperText={error}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                {loading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <Button type=\"submit\">Submit</Button>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </ModalPaper>\r\n      </Fade>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TokenModal","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nconst Title = styled.h3`\r\n  margin: 0;\r\n`\r\nconst CurrentTemp = styled.h3`\r\n  margin: 0;\r\n`\r\nconst MinMaxTemp = styled.h5`\r\n  margin: 0.5rem 0;\r\n`\r\n\r\nconst baseUrl = 'https://api.openweathermap.org/data/2.5/weather'\r\n\r\nconst getWeather = (units, apiKey, setWeather) => {\r\n  navigator.geolocation.getCurrentPosition(async position => {\r\n    const lat = position.coords.latitude\r\n    const lon = position.coords.longitude\r\n\r\n    const res = await axios.get(`${baseUrl}?units=${units}&lat=${lat}&lon=${lon}&appid=${apiKey}`)\r\n    let iconSrc = ''\r\n    if (res.data.weather && res.data.weather[0]) {\r\n      const icon = res.data.weather[0].icon\r\n      iconSrc = `https://openweathermap.org/img/wn/${icon}@2x.png`\r\n    }\r\n    const { main, name } = res.data\r\n    setWeather({\r\n      iconSrc,\r\n      name,\r\n      temp: Math.round(main.temp),\r\n      tempMin: Math.round(main.temp_min),\r\n      tempMax: Math.round(main.temp_max)\r\n    })\r\n  })\r\n}\r\n\r\nconst WeatherWidget = ({ apiKey, units, interval }) => {\r\n  const [weather, setWeather] = useState({})\r\n\r\n  const tempSuffix = {\r\n    metric: '°C',\r\n    imperial: '°F',\r\n    standard: 'K'\r\n  }[units]\r\n\r\n  useEffect(() => {\r\n    getWeather(units, apiKey, setWeather)\r\n    const _interval = setInterval(() => {\r\n      getWeather(units, apiKey, setWeather)\r\n    }, (interval || 60 * 15) * 1000)\r\n    \r\n    return () => clearInterval(_interval)\r\n  }, [apiKey, units, interval])\r\n\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n      {weather.iconSrc && (\r\n        <Grid item>\r\n          <img src={weather.iconSrc} alt=\"Weather Icon\" />\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item>\r\n        <Title>{weather.name}</Title>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <CurrentTemp>{weather.temp}{tempSuffix}</CurrentTemp>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <MinMaxTemp>\r\n          {weather.tempMin}{tempSuffix} - {weather.tempMax}{tempSuffix}\r\n        </MinMaxTemp>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default WeatherWidget","import { useState, useEffect } from 'react'\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  TableFooter,\r\n  Grid,\r\n} from '@material-ui/core'\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport styled from 'styled-components'\r\n\r\nimport WeatherWidget from './WeatherWidget'\r\n\r\nconst Container = styled.div`\r\n  background-color: ${props => props.colour};\r\n  min-height: 100vh;\r\n  padding: 1rem;\r\n`\r\nconst Image = styled.img`\r\n  display: block;\r\n  margin: auto;\r\n  max-height: 10rem;\r\n`\r\nconst CarouselImage = styled.img`\r\n  display: block;\r\n  margin: 0.5rem auto;\r\n  height: 30rem;\r\n`\r\nconst FlagImageCell = styled.img`\r\n  box-shadow: 0px 0px 3px 1px #a2a2a2;\r\n  width: ${props => {\r\n    switch(props.size) {\r\n      case 'small':\r\n        return '2.5rem';\r\n      case 'medium':\r\n        return '5rem';\r\n      case 'large':\r\n        return '7.5rem';\r\n      default:\r\n        return '5rem';\r\n    }\r\n  }};\r\n`\r\nconst FontCell = styled.div`\r\n  font-size: ${props => {\r\n    switch(props.size) {\r\n      case 'small':\r\n        return 'large';\r\n      case 'medium':\r\n        return 'x-large';\r\n      case 'large':\r\n        return 'xx-large';\r\n      default:\r\n        return 'x-large';\r\n    }\r\n  }};\r\n`\r\nconst PaperContainer = styled(Paper)`\r\n  overflow: auto;\r\n  height: 100%;\r\n\r\n  th {\r\n    font-weight: bold;\r\n  }\r\n`\r\nconst ColouredTableCell = styled(TableCell)`\r\n  color: ${props => props.fontColour} !important;\r\n  background-color: ${props => props.colour};\r\n  border-bottom-color: ${props => props.borderColour} !important;\r\n`\r\n\r\nconst cellDisplay = (column, row) => {\r\n  switch(column.key) {\r\n    case 'flag':\r\n      return <FlagImageCell\r\n        size={column.size}\r\n        src={row[column.key]}\r\n        alt={row[column.key]}\r\n      />\r\n    default:\r\n      return <FontCell size={column.size}>{row[column.key]}</FontCell>\r\n  }\r\n}\r\n\r\nconst ImageCarousel = ({ items, interval }) => {\r\n  return (\r\n    <Carousel\r\n      stopAutoPlayOnHover={false}\r\n      swipe={false}\r\n      indicators={false}\r\n      navButtonsAlwaysInvisible={true}\r\n      interval={Number(interval) * 1000}\r\n    >\r\n      {items.map((item, i) => <CarouselImage key={i} src={item.src} />)}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nconst RateBoard = ({ config, catalog, removeToken }) => {\r\n  const [allRates, setAllRates] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (config.isAllRates) {\r\n      setAllRates(catalog.rates || [])\r\n    } else {\r\n      setAllRates((catalog.rates || []).filter(rate => rate.isFlagged))\r\n    }\r\n  }, [catalog.rates?.length])\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      const rates = [...allRates]\r\n      if (rates.length > 0) {\r\n        const firstRate = rates.shift();\r\n        setAllRates([...rates, firstRate])\r\n      }\r\n    }, Number(config.rowsInterval) * 1000)\r\n  }, [allRates, config.rowsInterval])\r\n\r\n  const rates = allRates.slice(0, Number(config.maxRows));\r\n\r\n  const tableHead = config.tableColumns || [];\r\n\r\n  const timestamp = <FontCell>{catalog.timestamp}</FontCell> || '';\r\n\r\n  return (\r\n    <Container colour={config.backgroundColour}>\r\n      <Image src={config.logo} alt=\"logo\" />\r\n\r\n      {config.carouselPosition === 'top' && (\r\n        <ImageCarousel items={config.carouselImages} interval={Number(config.carouselInterval)} />\r\n      )}\r\n\r\n      <Grid container spacing={2}>\r\n        {config.weatherPosition === 'left' && (\r\n          <Grid item xs={2}>\r\n            <PaperContainer style={{ \r\n              backgroundColor: config.weatherBackgroundColour, \r\n              color: config.weatherFontColour\r\n            }}>\r\n              <WeatherWidget \r\n                apiKey={config.weatherApiKey} \r\n                units={config.weatherUnits} \r\n                interval={config.weatherInterval}\r\n              />\r\n            </PaperContainer>\r\n          </Grid>\r\n        )}\r\n\r\n        <Grid item xs={config.weatherPosition === 'none' ? 12 : 10}>\r\n          <PaperContainer elevation={3}>\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  {config.datePosition && config.datePosition.includes('top') && (\r\n                    <TableRow>\r\n                      <ColouredTableCell \r\n                        align={config.datePosition.split('-')[1]}\r\n                        colSpan={tableHead.length}\r\n                        colour={config.headerColour}\r\n                        borderColour={config.dividerColour}\r\n                        fontColour={'rgba(0, 0, 0, 0.54)'}\r\n                      >\r\n                        {timestamp}\r\n                      </ColouredTableCell>\r\n                    </TableRow>\r\n                  )}\r\n                  <TableRow onClick={removeToken}>\r\n                    {tableHead.map((col, i) => (\r\n                      <ColouredTableCell \r\n                        key={col.key} \r\n                        align={col.align} \r\n                        colour={config.headerColour}\r\n                        borderColour={config.dividerColour}\r\n                        fontColour={config.fontColour}\r\n                        style={{ width: col.width }}\r\n                      >\r\n                        <FontCell>{col.title}</FontCell>\r\n                      </ColouredTableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {rates.map((row, i) => (\r\n                    <TableRow key={row.iso}>\r\n                      {tableHead.map(col => (\r\n                        <ColouredTableCell \r\n                          key={`${row.iso}-${col.key}`}\r\n                          align={col.align}\r\n                          colour={!!(i%2) ? config.oddColour : config.evenColour}\r\n                          borderColour={config.dividerColour}\r\n                          fontColour={config.fontColour}\r\n                        >\r\n                          {cellDisplay(col, row)}\r\n                        </ColouredTableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n\r\n                {config.datePosition && config.datePosition.includes('bottom') && (\r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <ColouredTableCell \r\n                        align={config.datePosition.split('-')[1]}\r\n                        colSpan={tableHead.length}\r\n                        colour={config.footerColour}\r\n                        borderColour={config.footerColour}\r\n                        fontColour={config.font}\r\n                      >\r\n                        {timestamp}\r\n                      </ColouredTableCell>\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </PaperContainer>\r\n        </Grid>\r\n\r\n        {config.weatherPosition === 'right' && (\r\n          <Grid item xs={2}>\r\n            <PaperContainer style={{ \r\n              backgroundColor: config.weatherBackgroundColour, \r\n              color: config.weatherFontColour\r\n            }}>\r\n              <WeatherWidget \r\n                apiKey={config.weatherApiKey} \r\n                units={config.weatherUnits} \r\n                interval={config.weatherInterval}\r\n              />\r\n            </PaperContainer>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n\r\n      {config.carouselPosition === 'bottom' && (\r\n        <ImageCarousel items={config.carouselImages} interval={config.carouselInterval} />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RateBoard;\r\n","import styled from 'styled-components'\r\n\r\nconst IconHover = styled.div`\r\n  width: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  svg {\r\n    ${props => props.display ? '' : 'display: none;'}\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  IconHover\r\n}","import {\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport {\r\n  ArrowBack as ArrowBackIcon,\r\n  Delete as DeleteIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n} from '@material-ui/icons'\r\n\r\nimport { IconHover } from './styles'\r\n\r\nconst ColumnCard = ({ onColumnShift, onColumnRemove, onColumnChange, isFirst, isLast, column }) => {\r\n  return (\r\n    <Grid container spacing={1} direction=\"column\" justify=\"\" alignItems=\"stretch\">\r\n  \r\n      <Grid item>\r\n        <Grid container direction=\"row\" justify=\"space-between\">\r\n          <Grid item>\r\n            <IconHover display={!isFirst}>\r\n              <ArrowBackIcon onClick={() => onColumnShift(-1)} />\r\n            </IconHover>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconHover display>\r\n              <DeleteIcon onClick={onColumnRemove} />\r\n            </IconHover>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconHover display={!isLast}>\r\n              <ArrowForwardIcon onClick={() => onColumnShift(1)} />\r\n            </IconHover>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"field-select-label\">Field</InputLabel>\r\n          <Select\r\n            labelId=\"field-select-label\"\r\n            id=\"field-select\"\r\n            value={column.key}\r\n            onChange={e => onColumnChange(e, 'key')}\r\n          >\r\n            <MenuItem value={'flag'}>Flag</MenuItem>\r\n            <MenuItem value={'iso'}>ISO</MenuItem>\r\n            <MenuItem value={'name'}>Name</MenuItem>\r\n            <MenuItem value={'country'}>Country</MenuItem>\r\n            <MenuItem value={'weBuy'}>We Buy</MenuItem>\r\n            <MenuItem value={'weSell'}>We Sell</MenuItem>\r\n            <MenuItem value={'invBuy'}>Inv Buy</MenuItem>\r\n            <MenuItem value={'invSell'}>Inv Sell</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TextField \r\n          label=\"Field Name\"\r\n          value={column.title}\r\n          onChange={e => onColumnChange(e, 'title')}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"align-select-label\">Align</InputLabel>\r\n          <Select\r\n            labelId=\"align-select-label\"\r\n            id=\"align-select\"\r\n            value={column.align || 'left'}\r\n            onChange={e => onColumnChange(e, 'align')}\r\n          >\r\n            <MenuItem value={'center'}>Center</MenuItem>\r\n            <MenuItem value={'left'}>Left</MenuItem>\r\n            <MenuItem value={'right'}>Right</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"size-select-label\">Size</InputLabel>\r\n          <Select\r\n            labelId=\"size-select-label\"\r\n            id=\"size-select\"\r\n            value={column.size || 'medium'}\r\n            onChange={e => onColumnChange(e, 'size')}\r\n          >\r\n            <MenuItem value={'small'}>Small</MenuItem>\r\n            <MenuItem value={'medium'}>Medium</MenuItem>\r\n            <MenuItem value={'large'}>Large</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TextField\r\n          label=\"Width\"\r\n          value={column.width || ''}\r\n          onChange={e => onColumnChange(e, 'width')}\r\n        />\r\n      </Grid>\r\n\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ColumnCard","import { useReducer } from 'react'\r\n\r\nconst changeArrayObject = (_items, { value, index, key }) => {\r\n  const items = [..._items]\r\n  items.splice(index, 1, {\r\n    ...items[index],\r\n    [key]: value\r\n  })\r\n  return items\r\n}\r\n\r\nconst shiftArrayObject = (_items, { index, shift }) => {\r\n  const items = [..._items]\r\n  const item = items.splice(index, 1)\r\n  items.splice(index + shift, 0, item[0])\r\n  return items\r\n}\r\n\r\nconst removeArrayObject = (_items, { index }) => {\r\n  const items = [..._items]\r\n  items.splice(index, 1)\r\n  return items\r\n}\r\n\r\nconst reducer = (_state, action) => {\r\n  const state = JSON.parse(JSON.stringify(_state))\r\n\r\n  const key = action.key;\r\n  switch(action.type) {\r\n    case 'setDefault':\r\n      const defaultPayload = JSON.parse(JSON.stringify(action.payload))\r\n      return { ...state, default: defaultPayload, current: defaultPayload }\r\n    case 'onChange':\r\n      state.current[key] = action.payload.value\r\n      return state\r\n    case 'onPushArray':\r\n      state.current[key] = [ ...state.current[key], action.payload ]\r\n      return state\r\n    case 'onChangeArrayObject':\r\n      state.current[key] = changeArrayObject(state.current[key], action.payload)\r\n      return state\r\n    case 'onShiftArray':\r\n      state.current[key] = shiftArrayObject(state.current[key], action.payload)\r\n      return state\r\n    case 'onRemoveArrayObject':\r\n      state.current[key] = removeArrayObject(state.current[key], action.payload)\r\n      return state\r\n    case 'onReset':\r\n      state.current[key] = state.default[key]\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst useConfigReducer = () => {\r\n  const initialState = {\r\n    default: {},\r\n    current: {},\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const dispatcher = {\r\n    setDefault: (defaultConfig) => dispatch({\r\n      type: 'setDefault', \r\n      payload: defaultConfig\r\n    }),\r\n    onChange: (key, event) => dispatch({\r\n      key,\r\n      type: 'onChange',\r\n      payload: { value: (event.target ? event.target.value : event) }\r\n    }),\r\n    onPushArray: (key, payload) => dispatch({\r\n      key, type: 'onPushArray', payload\r\n    }),\r\n    onChangeArrayObject: (key, event, index, objKey) => dispatch({\r\n      key, \r\n      type: 'onChangeArrayObject',\r\n      payload: { value: event.target.value, index, key: objKey }\r\n    }),\r\n    onShiftArray: (key, index, shift) => dispatch({\r\n      key,\r\n      type: 'onShiftArray',\r\n      payload: { index, shift }\r\n    }),\r\n    onRemoveArrayObject: (key, index) => dispatch({\r\n      key,\r\n      type: 'onRemoveArrayObject',\r\n      payload: { index }\r\n    }),\r\n    onReset: (key) => dispatch({\r\n      key, type: 'onReset'\r\n    })\r\n  }\r\n\r\n  return [state.current, dispatcher]\r\n}\r\n\r\nexport default useConfigReducer","import { useState, useEffect } from 'react'\r\nimport fileDownload from 'js-file-download'\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  Tabs,\r\n  Tab\r\n} from '@material-ui/core'\r\nimport { \r\n  AddCircle as AddCircleIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Delete as DeleteIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n  SettingsBackupRestore as SettingsBackupRestoreIcon\r\n} from '@material-ui/icons'\r\nimport styled from 'styled-components'\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\nimport { IconHover } from './styles'\r\nimport RateBoard from '../RateBoard/RateBoard'\r\nimport ColumnCard from './ColumnCard'\r\nimport useConfigReducer from './useConfigReducer'\r\n\r\nconst Container = styled.div`\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n`\r\nconst PaperContainer = styled(Paper)`\r\n  margin: 0.5rem;\r\n  padding: 1rem;\r\n`\r\nconst SubTitle = styled.h2`\r\n  text-align: center;\r\n  margin: 0;\r\n  margin-bottom: 1rem;\r\n`\r\nconst PaperCard = styled(Paper)`\r\n  padding: 0.5rem;\r\n  width: 10rem;\r\n`\r\nconst BaseAddContainer = styled(Paper)`\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #f9f9f9;\r\n  }\r\n`\r\nconst AddColumnContainer = styled(BaseAddContainer)`\r\n  width: calc(10rem + 16px);\r\n  min-height: 12rem;\r\n`\r\nconst AddCarouselImageContainer = styled(BaseAddContainer)`\r\n  width: calc(10rem + 16px);\r\n  min-height: 6rem;\r\n`\r\nconst CenterButtonContainer = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst TextFieldContainer = styled.div`\r\n  width: 7rem;\r\n`\r\n\r\nconst colourColumns = [\r\n  { label: 'Background', key: 'backgroundColour' },\r\n  { label: 'Header', key: 'headerColour' },\r\n  { label: 'Even Row', key: 'evenColour' },\r\n  { label: 'Odd Row', key: 'oddColour' },\r\n  { label: 'Divider', key: 'dividerColour' },\r\n  { label: 'Font', key: 'fontColour' },\r\n  { label: 'Footer', key: 'footerColour' },\r\n  { label: 'Weather Background', key: 'weatherBackgroundColour' },\r\n  { label: 'Weather Font', key: 'weatherFontColour' },\r\n]\r\n\r\nconst miscColumns = [\r\n  { label: 'Logo', key: 'logo' },\r\n  { label: 'Max Rows', key: 'maxRows', type: 'number' },\r\n  { label: 'Rows Interval', key: 'rowsInterval', type: 'number' },\r\n  { label: 'Date Position', key: 'datePosition', options: [\r\n    { label: 'None', key: 'none' },\r\n    { label: 'Top Left', key: 'top-left' },\r\n    { label: 'Top Right', key: 'top-right' },\r\n    { label: 'Bottom Left', key: 'bottom-left' },\r\n    { label: 'Bottom Right', key: 'bottom-right' },\r\n  ] }\r\n]\r\n\r\nconst weatherColumns = [\r\n  { label: 'API Key', key: 'weatherApiKey' },\r\n  { label: 'Refresh Rate', key: 'weatherInterval', type: 'number' },\r\n  { label: 'Position', key: 'weatherPosition', options: [\r\n    { label: 'None', key: 'none' },\r\n    { label: 'Left', key: 'left' },\r\n    { label: 'Right', key: 'right' },\r\n  ] },\r\n  { label: 'Units', key: 'weatherUnits', options: [\r\n    { label: 'Metric', key: 'metric' },\r\n    { label: 'Imperial', key: 'imperial' },\r\n    { label: 'Kelvin', key: 'standard' },\r\n  ] }\r\n]\r\n\r\nconst Config = ({ defaultConfig, catalog }) => {\r\n  const [config, dispatcher] = useConfigReducer();\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [tabValue, setTabValue] = useState('columns');\r\n\r\n  useEffect(() => {\r\n    dispatcher.setDefault(defaultConfig)\r\n  }, [defaultConfig]);\r\n\r\n  const onColumnAdd = () => {\r\n    dispatcher.onPushArray('tableColumns', { title: '', key: '', fontSize: 'medium', align: 'left' })\r\n  }\r\n\r\n  const onAddCarouselImage = () => {\r\n    dispatcher.onPushArray('carouselImages', { src: '' })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Rate Board Configuration</h1>\r\n\r\n      <PaperContainer elevation={3} style={{ padding: 0 }}>\r\n        <Tabs\r\n          value={tabValue}\r\n          onChange={(e, value) => setTabValue(value)}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab value=\"columns\" label=\"Columns\" />\r\n          <Tab value=\"colours\" label=\"Colours\" />\r\n          <Tab value=\"misc\" label=\"Misc\" />\r\n          <Tab value=\"carousel\" label=\"Carousel\" />\r\n          <Tab value=\"weather\" label=\"Weather\" />\r\n        </Tabs>\r\n      </PaperContainer>\r\n\r\n      <PaperContainer elevation={3}>\r\n        {tabValue === 'columns' && (\r\n          <>\r\n          <SubTitle>Columns</SubTitle>\r\n\r\n          <Grid container direction=\"row\" spacing={2}>\r\n            {config.tableColumns?.map((col, index) => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <ColumnCard\r\n                    isFirst={index === 0}\r\n                    isLast={index === config.tableColumns.length - 1}\r\n                    column={col}\r\n                    onColumnShift={shift => dispatcher.onShiftArray('tableColumns', index, shift)}\r\n                    onColumnRemove={() => dispatcher.onRemoveArrayObject('tableColumns', index)}\r\n                    onColumnChange={(e, key) => dispatcher.onChangeArrayObject('tableColumns', e, index, key)}\r\n                  />\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n\r\n            <Grid item>\r\n              <AddColumnContainer onClick={onColumnAdd}>\r\n                <AddCircleIcon fontSize=\"large\" />\r\n              </AddColumnContainer>\r\n            </Grid>\r\n          </Grid>\r\n          </>\r\n        )}\r\n        \r\n        {tabValue === 'colours' && (\r\n          <>\r\n          <SubTitle>Colours</SubTitle>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n            {colourColumns.map(col => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                    <Grid item>\r\n                      <TextFieldContainer>\r\n                        <ColorPicker \r\n                          label={col.label}\r\n                          defaultValue=\"#000\"\r\n                          value={config[col.key]}\r\n                          TextFieldProps={{ value: config[col.key] }}\r\n                          onChange={value => dispatcher.onChange(col.key, value)}\r\n                        />\r\n                      </TextFieldContainer>\r\n                    </Grid>\r\n  \r\n                    <Grid item>\r\n                      <IconHover display>\r\n                        <SettingsBackupRestoreIcon onClick={() => dispatcher.onReset(col.key)} />\r\n                      </IconHover>\r\n                    </Grid>\r\n                  </Grid>\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          </>\r\n        )}\r\n\r\n        {tabValue === 'misc' && (\r\n          <>\r\n          <SubTitle>Miscellaneous</SubTitle>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n            {miscColumns.map(col => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" wrap=\"nowrap\">\r\n                    <Grid item style={{ flexGrow: '1', marginRight: '1rem' }}>\r\n                      {col.options && col.options.length ? (\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id={`${col.key}-select-label`}>{col.label}</InputLabel>\r\n                          <Select\r\n                            labelId={`${col.key}-select-label`}\r\n                            id={`${col.key}-select`}\r\n                            value={config[col.key]}\r\n                            defaultValue={col.options[0].key}\r\n                            onChange={e => dispatcher.onChange(col.key, e)}\r\n                          >\r\n                            {col.options.map(option => <MenuItem value={option.key}>{option.label}</MenuItem>)}\r\n                          </Select>\r\n                        </FormControl>\r\n                      ) : (\r\n                        <TextFieldContainer>\r\n                          <TextField \r\n                            label={col.label}\r\n                            value={config[col.key]}\r\n                            type={col.type || 'text'}\r\n                            onChange={e => dispatcher.onChange(col.key, e)}\r\n                          />\r\n                        </TextFieldContainer>\r\n                      )}\r\n                    </Grid>\r\n  \r\n                    <Grid item>\r\n                      <IconHover display>\r\n                        <SettingsBackupRestoreIcon onClick={() => dispatcher.onReset(col.key)} />\r\n                      </IconHover>\r\n                    </Grid>\r\n                  </Grid>\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          </>\r\n        )}\r\n\r\n        {tabValue === 'carousel' && (\r\n          <>\r\n          <SubTitle>Carousel</SubTitle>\r\n\r\n          <Grid container direction=\"column\" spacing={2}>\r\n            <Grid item>\r\n              <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n                <Grid item>\r\n                  <PaperCard elevation={1}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"position-select-label\">Position</InputLabel>\r\n                      <Select\r\n                        labelId=\"position-select-label\"\r\n                        id=\"position-select\"\r\n                        value={config.carouselPosition}\r\n                        defaultValue='none'\r\n                        onChange={e => dispatcher.onChange('carouselPosition', e)}\r\n                      >\r\n                        <MenuItem value={'none'}>None</MenuItem>\r\n                        <MenuItem value={'top'}>Top</MenuItem>\r\n                        <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </PaperCard>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <PaperCard elevation={1}>\r\n                    <TextField \r\n                      label=\"Interval (ms)\"\r\n                      type='number'\r\n                      value={config.carouselInterval || 4000}\r\n                      onChange={e => dispatcher.onChange('carouselInterval', e)}\r\n                    />\r\n                  </PaperCard>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n                {config.carouselImages.map((image, index) => (\r\n                  <Grid item>\r\n                    <PaperCard elevation={1}>\r\n                      <Grid container spacing={1} direction=\"column\" justify=\"\" alignItems=\"stretch\">\r\n                        <Grid item>\r\n                          <Grid container direction=\"row\" justify=\"space-between\">\r\n                            <Grid item>\r\n                              <IconHover display={index !== 0}>\r\n                                <ArrowBackIcon onClick={() => dispatcher.onShiftArray('carouselImages', index, -1)} />\r\n                              </IconHover>\r\n                            </Grid>\r\n                            <Grid item>\r\n                              <IconHover display>\r\n                                <DeleteIcon onClick={() => dispatcher.onRemoveArrayObject('carouselImages', index)} />\r\n                              </IconHover>\r\n                            </Grid>\r\n                            <Grid item>\r\n                              <IconHover display={index !== config.carouselImages.length - 1}>\r\n                                <ArrowForwardIcon onClick={() => dispatcher.onShiftArray('carouselImages', index, 1)} />\r\n                              </IconHover>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                          <TextField \r\n                            label=\"Image Src\"\r\n                            value={image.src}\r\n                            onChange={e => dispatcher.onChangeArrayObject('carouselImages', e, index, 'src')}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                    </PaperCard>\r\n                  </Grid>\r\n                ))}\r\n\r\n                <Grid item>\r\n                  <AddCarouselImageContainer onClick={onAddCarouselImage}>\r\n                    <AddCircleIcon fontSize=\"large\" />\r\n                  </AddCarouselImageContainer>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          </>\r\n        )}\r\n\r\n        {tabValue === 'weather' && (\r\n          <>\r\n          <SubTitle>Weather</SubTitle>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n            {weatherColumns.map(col => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" wrap=\"nowrap\">\r\n                    <Grid item style={{ flexGrow: '1', marginRight: '1rem' }}>\r\n                      {col.options && col.options.length ? (\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id={`${col.key}-select-label`}>{col.label}</InputLabel>\r\n                          <Select\r\n                            labelId={`${col.key}-select-label`}\r\n                            id={`${col.key}-select`}\r\n                            value={config[col.key]}\r\n                            defaultValue={col.options[0].key}\r\n                            onChange={e => dispatcher.onChange(col.key, e)}\r\n                          >\r\n                            {col.options.map(option => <MenuItem value={option.key}>{option.label}</MenuItem>)}\r\n                          </Select>\r\n                        </FormControl>\r\n                      ) : (\r\n                        <TextFieldContainer>\r\n                          <TextField \r\n                            label={col.label}\r\n                            value={config[col.key]}\r\n                            type={col.type || 'text'}\r\n                            onChange={e => dispatcher.onChange(col.key, e)}\r\n                          />\r\n                        </TextFieldContainer>\r\n                      )}\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <IconHover display>\r\n                        <SettingsBackupRestoreIcon \r\n                          onClick={() => dispatcher.onReset(col.key)} \r\n                        />\r\n                      </IconHover>\r\n                    </Grid>\r\n                  </Grid>\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          </>\r\n        )}\r\n      </PaperContainer>\r\n\r\n      <CenterButtonContainer>\r\n        <Button \r\n          color=\"primary\"\r\n          onClick={() => setShowPreview(x => !x)}\r\n        >Toggle Preview</Button>\r\n      </CenterButtonContainer>\r\n\r\n      {showPreview && <RateBoard config={config} catalog={catalog} />}\r\n\r\n      <CenterButtonContainer>\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          onClick={() => fileDownload(JSON.stringify(config), 'config.json')}\r\n        >\r\n          Download\r\n        </Button>\r\n      </CenterButtonContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Config","import useLocationHash from './hooks/useLocationHash'\nimport useTokenStorage from './hooks/useTokenStorage'\nimport useConfig from './hooks/useConfig'\nimport useCatalog from './hooks/useCatalog'\n\nimport TokenModal from './components/TokenModal'\n\nimport RateBoard from './pages/RateBoard/RateBoard'\nimport Config from './pages/Config/Config'\n\nfunction App() {\n  const hash = useLocationHash();\n  const [token, setToken] = useTokenStorage();\n  const config = useConfig(token);\n  const catalog = useCatalog(token);\n  \n  if (!token) {\n    return <TokenModal open={!token} onSuccess={token => setToken(token)} />\n  }\n\n  switch (hash) {\n    case '#config':\n      return <Config defaultConfig={config} catalog={catalog} />\n    default: \n      return <RateBoard\n        config={config}\n        catalog={catalog}\n        removeToken={() => setToken('')}\n      />\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["hooks/useLocationHash.js","hooks/useTokenStorage.js","hooks/useConfig.js","hooks/useCatalog.js","components/TokenModal.js","pages/RateBoard/WeatherWidget.js","pages/RateBoard/RateBoard.js","pages/Config/styles.js","pages/Config/ColumnCard.js","pages/Config/useConfigReducer.js","pages/Config/Config.js","App.js","reportWebVitals.js","index.js"],"names":["useLocationHash","useState","window","location","hash","setHash","useEffect","onhashchange","event","target","useTokenStorage","state","setState","localStorage","getItem","token","confirm","setItem","useConfig","config","setConfig","getConfig","a","configURL","axios","get","headers","res","data","cleanCatalog","catalog","timestamp","TIMESTAMP","rates","RATE","map","rate","isFlagged","ISFLAGGED","flagURL","FLAGURL","flag","iso","ISO","name","NAME","country","COUNTRY","id","ID","weBuy","WEBUY","weSell","WESELL","invBuy","INVBUY","invSell","INVSELL","useCatalog","setCatalog","getCatalog","ratesURL","parseXML","xml","CATALOG","interval","setInterval","clearInterval","Modal","styled","BaseModal","Fade","BaseFade","ModalPaper","Paper","TokenModal","open","onSubmit","setToken","closeAfterTransition","in","elevation","preventDefault","Grid","container","direction","justify","alignItems","spacing","item","TextField","variant","label","value","onChange","Button","type","Title","h3","CurrentTemp","MinMaxTemp","h5","getWeather","units","apiKey","setWeather","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","iconSrc","weather","icon","main","temp","Math","round","tempMin","temp_min","tempMax","temp_max","WeatherWidget","tempSuffix","metric","imperial","standard","_interval","src","alt","Container","div","props","colour","Image","img","CarouselImage","FlagImageCell","size","FontCell","PaperContainer","ColouredTableCell","TableCell","fontColour","borderColour","cellDisplay","column","row","key","ImageCarousel","items","stopAutoPlayOnHover","swipe","indicators","navButtonsAlwaysInvisible","Number","i","RateBoard","removeToken","allRates","setAllRates","isAllRates","filter","length","setTimeout","firstRate","shift","rowsInterval","slice","maxRows","tableHead","carousel","background","logo","images","xs","style","backgroundColor","weatherBackground","color","weatherFont","TableContainer","Table","TableHead","datePosition","includes","TableRow","align","split","colSpan","header","divider","onClick","col","font","width","title","TableBody","odd","even","TableFooter","footer","IconHover","display","ColumnCard","onColumnShift","onColumnRemove","onColumnChange","isFirst","isLast","ArrowBack","Delete","ArrowForward","FormControl","fullWidth","InputLabel","Select","labelId","e","MenuItem","changeArrayObject","_items","index","splice","shiftArrayObject","removeArrayObject","reducer","_state","action","JSON","parse","stringify","defaultPayload","payload","default","current","push","fontSize","colours","onChangeColour","useConfigReducer","useReducer","dispatch","dispatcher","setDefault","defaultConfig","onColumnAdd","onResetColour","onChangeMisc","onResetMisc","onChangeCarouselMisc","onChangeCarouselImage","onAddCarouselImage","onShiftCarouselImage","onRemoveCarouselImage","onChangeWeather","onResetWeather","SubTitle","h2","PaperCard","BaseAddContainer","AddColumnContainer","AddCarouselImageContainer","CenterButtonContainer","TextFieldContainer","colourColumns","miscColumns","options","weatherColumns","Config","showPreview","setShowPreview","tabValue","setTabValue","tableColumns","tableColours","tableCarousel","tableWeather","padding","Tabs","indicatorColor","textColor","centered","Tab","AddCircle","defaultValue","TextFieldProps","SettingsBackupRestore","wrap","flexGrow","marginRight","option","image","x","fileDownload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79e510d1.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nconst useLocationHash = () => {\r\n    const [hash, setHash] = useState(window.location.hash);\r\n\r\n    useEffect(() => {\r\n      window.onhashchange = (event => {\r\n        setHash(event.target.location.hash)\r\n      })\r\n    }, [])\r\n\r\n    return hash\r\n  }\r\n\r\nexport default useLocationHash","import { useState, useEffect } from 'react'\r\n\r\nconst useTokenStorage = () => {\r\n  const [state, setState] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setState(localStorage.getItem('token'))\r\n  }, [])\r\n\r\n  const setToken = (token) => {\r\n    const confirmMessage = 'Are you sure you want to remove your token?'\r\n    if (token === '' && !window.confirm(confirmMessage)) {\r\n      return null;\r\n    }\r\n    localStorage.setItem('token', token)\r\n    setState(token)\r\n  }\r\n\r\n  return [state, setToken]\r\n}\r\n\r\nexport default useTokenStorage","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst useConfig = (token) => {\r\n  const [config, setConfig] = useState({});\r\n\r\n  const getConfig = async () => {\r\n    if (!token) return\r\n\r\n    let configURL = `https://www.clearviewsys.com/rates/${token}/config.json`;\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      configURL = 'config.json'\r\n    }\r\n  \r\n    const res = await axios.get(configURL, {\r\n      headers: { 'Cache-Control': 'no-cache' }\r\n    });\r\n    setConfig(res.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, [token]);\r\n\r\n  return config;\r\n}\r\n\r\nexport default useConfig","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { parseStringPromise as parseXML } from 'xml2js';\r\n\r\nconst cleanCatalog = (catalog) => {\r\n  const timestamp = catalog.TIMESTAMP[0];\r\n  const rates = catalog.RATE.map(rate => ({\r\n    isFlagged: rate.ISFLAGGED[0] === '**',\r\n    flagURL: rate.FLAGURL[0],\r\n    flag: rate.FLAGURL[0],\r\n    iso: rate.ISO[0],\r\n    name: rate.NAME[0],\r\n    country: rate.COUNTRY[0],\r\n    id: rate.ID ? rate.ID[0] : '',\r\n    weBuy: rate.WEBUY[0],\r\n    weSell: rate.WESELL[0],\r\n    invBuy: rate.INVBUY[0],\r\n    invSell: rate.INVSELL[0]\r\n  }));\r\n\r\n  return { timestamp, rates }\r\n}\r\n\r\nconst useCatalog = (token) => {\r\n  const [catalog, setCatalog] = useState({});\r\n\r\n  const getCatalog = async () => {\r\n    if (!token) return\r\n    \r\n    let ratesURL = `https://www.clearviewsys.com/rates/${token}/rateswithcss.xml`;\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      ratesURL = 'rateswithcss.xml'\r\n    }\r\n    \r\n    const res = await axios.get(ratesURL, {\r\n      headers: { 'Cache-Control': 'no-cache' }\r\n    });\r\n    const xml = await parseXML(res.data);\r\n    setCatalog(cleanCatalog(xml.CATALOG));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCatalog()\r\n    const interval = setInterval(() => getCatalog(), 5000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [token])\r\n\r\n  return catalog\r\n}\r\n\r\nexport default useCatalog","import { useState } from 'react'\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Modal as BaseModal,\r\n  Fade as BaseFade,\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core'\r\nimport styled from 'styled-components'\r\n\r\nconst Modal = styled(BaseModal)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\nconst Fade = styled(BaseFade)`\r\n  :focus-visible {\r\n    outline: none;\r\n  }\r\n`\r\nconst ModalPaper = styled(Paper)`\r\n  padding: 1rem;\r\n`\r\n\r\nconst TokenModal = ({ open, onSubmit }) => {\r\n  const [token, setToken] = useState('')\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault()\r\n    onSubmit(token)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      closeAfterTransition\r\n    >\r\n      <Fade in={open}>\r\n        <ModalPaper elevation={3}>\r\n          <form onSubmit={onFormSubmit}>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              spacing={2}\r\n            >\r\n              <Grid item>\r\n                <TextField \r\n                  variant=\"outlined\" \r\n                  label=\"Token\"\r\n                  value={token}\r\n                  onChange={event => setToken(event.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item><Button type=\"submit\">Submit</Button></Grid>\r\n            </Grid>\r\n          </form>\r\n        </ModalPaper>\r\n      </Fade>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TokenModal","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nconst Title = styled.h3`\r\n  margin: 0;\r\n`\r\nconst CurrentTemp = styled.h3`\r\n  margin: 0;\r\n`\r\nconst MinMaxTemp = styled.h5`\r\n  margin: 0.5rem 0;\r\n`\r\n\r\nconst baseUrl = 'https://api.openweathermap.org/data/2.5/weather'\r\n\r\nconst getWeather = (units, apiKey, setWeather) => {\r\n  navigator.geolocation.getCurrentPosition(async position => {\r\n    const lat = position.coords.latitude\r\n    const lon = position.coords.longitude\r\n\r\n    const res = await axios.get(`${baseUrl}?units=${units}&lat=${lat}&lon=${lon}&appid=${apiKey}`)\r\n    let iconSrc = ''\r\n    if (res.data.weather && res.data.weather[0]) {\r\n      const icon = res.data.weather[0].icon\r\n      iconSrc = `https://openweathermap.org/img/wn/${icon}@2x.png`\r\n    }\r\n    const { main, name } = res.data\r\n    setWeather({\r\n      iconSrc,\r\n      name,\r\n      temp: Math.round(main.temp),\r\n      tempMin: Math.round(main.temp_min),\r\n      tempMax: Math.round(main.temp_max)\r\n    })\r\n  })\r\n}\r\n\r\nconst WeatherWidget = ({ apiKey, units, interval }) => {\r\n  const [weather, setWeather] = useState({})\r\n\r\n  const tempSuffix = {\r\n    metric: '°C',\r\n    imperial: '°F',\r\n    standard: 'K'\r\n  }[units]\r\n\r\n  useEffect(() => {\r\n    getWeather(units, apiKey, setWeather)\r\n    const _interval = setInterval(() => {\r\n      getWeather(units, apiKey, setWeather)\r\n    }, (interval || 60 * 15) * 1000)\r\n    \r\n    return () => clearInterval(_interval)\r\n  }, [apiKey, units, interval])\r\n\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n      {weather.iconSrc && (\r\n        <Grid item>\r\n          <img src={weather.iconSrc} alt=\"Weather Icon\" />\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item>\r\n        <Title>{weather.name}</Title>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <CurrentTemp>{weather.temp}{tempSuffix}</CurrentTemp>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <MinMaxTemp>\r\n          {weather.tempMin}{tempSuffix} - {weather.tempMax}{tempSuffix}\r\n        </MinMaxTemp>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default WeatherWidget","import { useState, useEffect } from 'react'\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  TableFooter,\r\n  Grid,\r\n} from '@material-ui/core'\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport styled from 'styled-components'\r\n\r\nimport WeatherWidget from './WeatherWidget'\r\n\r\nconst Container = styled.div`\r\n  background-color: ${props => props.colour};\r\n  min-height: 100vh;\r\n  padding: 1rem;\r\n`\r\nconst Image = styled.img`\r\n  display: block;\r\n  margin: auto;\r\n  max-height: 10rem;\r\n`\r\nconst CarouselImage = styled.img`\r\n  display: block;\r\n  margin: 0.5rem auto;\r\n  height: 30rem;\r\n`\r\nconst FlagImageCell = styled.img`\r\n  box-shadow: 0px 0px 3px 1px #a2a2a2;\r\n  width: ${props => {\r\n    switch(props.size) {\r\n      case 'small':\r\n        return '2.5rem';\r\n      case 'medium':\r\n        return '5rem';\r\n      case 'large':\r\n        return '7.5rem';\r\n      default:\r\n        return '5rem';\r\n    }\r\n  }};\r\n`\r\nconst FontCell = styled.div`\r\n  font-size: ${props => {\r\n    switch(props.size) {\r\n      case 'small':\r\n        return 'large';\r\n      case 'medium':\r\n        return 'x-large';\r\n      case 'large':\r\n        return 'xx-large';\r\n      default:\r\n        return 'x-large';\r\n    }\r\n  }};\r\n`\r\nconst PaperContainer = styled(Paper)`\r\n  overflow: auto;\r\n  height: 100%;\r\n\r\n  th {\r\n    font-weight: bold;\r\n  }\r\n`\r\nconst ColouredTableCell = styled(TableCell)`\r\n  color: ${props => props.fontColour} !important;\r\n  background-color: ${props => props.colour};\r\n  border-bottom-color: ${props => props.borderColour} !important;\r\n`\r\n\r\nconst cellDisplay = (column, row) => {\r\n  switch(column.key) {\r\n    case 'flag':\r\n      return <FlagImageCell\r\n        size={column.size}\r\n        src={row[column.key]}\r\n        alt={row[column.key]}\r\n      />\r\n    default:\r\n      return <FontCell size={column.size}>{row[column.key]}</FontCell>\r\n  }\r\n}\r\n\r\nconst ImageCarousel = ({ items, interval }) => {\r\n  return (\r\n    <Carousel\r\n      stopAutoPlayOnHover={false}\r\n      swipe={false}\r\n      indicators={false}\r\n      navButtonsAlwaysInvisible={true}\r\n      interval={Number(interval) * 1000}\r\n    >\r\n      {items.map((item, i) => <CarouselImage key={i} src={item.src} />)}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nconst RateBoard = ({ config, catalog, removeToken }) => {\r\n  const [allRates, setAllRates] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (config.isAllRates) {\r\n      setAllRates(catalog.rates || [])\r\n    } else {\r\n      setAllRates((catalog.rates || []).filter(rate => rate.isFlagged))\r\n    }\r\n  }, [catalog.rates?.length])\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      const rates = [...allRates]\r\n      if (rates.length > 0) {\r\n        const firstRate = rates.shift();\r\n        setAllRates([...rates, firstRate])\r\n      }\r\n    }, Number(config.rowsInterval) * 1000)\r\n  }, [allRates, config.rowsInterval])\r\n\r\n  const rates = allRates.slice(0, Number(config.maxRows));\r\n\r\n  const tableHead = config.tableHead || [];\r\n  const colour = config.colour || {};\r\n  const carousel = config.carousel || {};\r\n  const weather = config.weather || {};\r\n\r\n  const timestamp = <FontCell>{catalog.timestamp}</FontCell> || '';\r\n\r\n  return (\r\n    <Container colour={colour.background}>\r\n      <Image src={config.logo} alt=\"logo\" />\r\n\r\n      {carousel.position === 'top' && (\r\n        <ImageCarousel items={carousel.images} interval={Number(carousel.interval)} />\r\n      )}\r\n\r\n      <Grid container spacing={2}>\r\n        {weather.position === 'left' && (\r\n          <Grid item xs={2}>\r\n            <PaperContainer style={{ \r\n              backgroundColor: colour.weatherBackground, \r\n              color: colour.weatherFont\r\n            }}>\r\n              <WeatherWidget apiKey={weather.apiKey} units={weather.units} interval={weather.interval} />\r\n            </PaperContainer>\r\n          </Grid>\r\n        )}\r\n\r\n        <Grid item xs={weather.position === 'none' ? 12 : 10}>\r\n          <PaperContainer elevation={3}>\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  {config.datePosition && config.datePosition.includes('top') && (\r\n                    <TableRow>\r\n                      <ColouredTableCell \r\n                        align={config.datePosition.split('-')[1]}\r\n                        colSpan={tableHead.length}\r\n                        colour={colour.header}\r\n                        borderColour={colour.divider}\r\n                        fontColour={'rgba(0, 0, 0, 0.54)'}\r\n                      >\r\n                        {timestamp}\r\n                      </ColouredTableCell>\r\n                    </TableRow>\r\n                  )}\r\n                  <TableRow onClick={removeToken}>\r\n                    {tableHead.map((col, i) => (\r\n                      <ColouredTableCell \r\n                        key={col.key} \r\n                        align={col.align} \r\n                        colour={colour.header}\r\n                        borderColour={colour.divider}\r\n                        fontColour={colour.font}\r\n                        style={{ width: col.width }}\r\n                      >\r\n                        <FontCell>{col.title}</FontCell>\r\n                      </ColouredTableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {rates.map((row, i) => (\r\n                    <TableRow key={row.iso}>\r\n                      {tableHead.map(col => (\r\n                        <ColouredTableCell \r\n                          key={`${row.iso}-${col.key}`}\r\n                          align={col.align}\r\n                          colour={!!(i%2) ? colour.odd : colour.even}\r\n                          borderColour={colour.divider}\r\n                          fontColour={colour.font}\r\n                        >\r\n                          {cellDisplay(col, row)}\r\n                        </ColouredTableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n\r\n                {config.datePosition && config.datePosition.includes('bottom') && (\r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <ColouredTableCell \r\n                        align={config.datePosition.split('-')[1]}\r\n                        colSpan={tableHead.length}\r\n                        colour={colour.footer}\r\n                        borderColour={colour.footer}\r\n                        fontColour={colour.font}\r\n                      >\r\n                        {timestamp}\r\n                      </ColouredTableCell>\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </PaperContainer>\r\n        </Grid>\r\n\r\n        {weather.position === 'right' && (\r\n          <Grid item xs={2}>\r\n            <PaperContainer style={{ \r\n              backgroundColor: colour.weatherBackground, \r\n              color: colour.weatherFont\r\n            }}>\r\n              <WeatherWidget apiKey={weather.apiKey} units={weather.units} interval={weather.interval} />\r\n            </PaperContainer>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n\r\n      {carousel.position === 'bottom' && (\r\n        <ImageCarousel items={carousel.images} interval={carousel.interval} />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RateBoard;\r\n","import styled from 'styled-components'\r\n\r\nconst IconHover = styled.div`\r\n  width: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  svg {\r\n    ${props => props.display ? '' : 'display: none;'}\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  IconHover\r\n}","import {\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport {\r\n  ArrowBack as ArrowBackIcon,\r\n  Delete as DeleteIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n} from '@material-ui/icons'\r\n\r\nimport { IconHover } from './styles'\r\n\r\nconst ColumnCard = ({ onColumnShift, onColumnRemove, onColumnChange, isFirst, isLast, column }) => {\r\n  return (\r\n    <Grid container spacing={1} direction=\"column\" justify=\"\" alignItems=\"stretch\">\r\n  \r\n      <Grid item>\r\n        <Grid container direction=\"row\" justify=\"space-between\">\r\n          <Grid item>\r\n            <IconHover display={!isFirst}>\r\n              <ArrowBackIcon onClick={() => onColumnShift(-1)} />\r\n            </IconHover>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconHover display>\r\n              <DeleteIcon onClick={onColumnRemove} />\r\n            </IconHover>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconHover display={!isLast}>\r\n              <ArrowForwardIcon onClick={() => onColumnShift(1)} />\r\n            </IconHover>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"field-select-label\">Field</InputLabel>\r\n          <Select\r\n            labelId=\"field-select-label\"\r\n            id=\"field-select\"\r\n            value={column.key}\r\n            onChange={e => onColumnChange(e, 'key')}\r\n          >\r\n            <MenuItem value={'flag'}>Flag</MenuItem>\r\n            <MenuItem value={'iso'}>ISO</MenuItem>\r\n            <MenuItem value={'name'}>Name</MenuItem>\r\n            <MenuItem value={'country'}>Country</MenuItem>\r\n            <MenuItem value={'weBuy'}>We Buy</MenuItem>\r\n            <MenuItem value={'weSell'}>We Sell</MenuItem>\r\n            <MenuItem value={'invBuy'}>Inv Buy</MenuItem>\r\n            <MenuItem value={'invSell'}>Inv Sell</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TextField \r\n          label=\"Field Name\"\r\n          value={column.title}\r\n          onChange={e => onColumnChange(e, 'title')}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"align-select-label\">Align</InputLabel>\r\n          <Select\r\n            labelId=\"align-select-label\"\r\n            id=\"align-select\"\r\n            value={column.align || 'left'}\r\n            onChange={e => onColumnChange(e, 'align')}\r\n          >\r\n            <MenuItem value={'center'}>Center</MenuItem>\r\n            <MenuItem value={'left'}>Left</MenuItem>\r\n            <MenuItem value={'right'}>Right</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"size-select-label\">Size</InputLabel>\r\n          <Select\r\n            labelId=\"size-select-label\"\r\n            id=\"size-select\"\r\n            value={column.size || 'medium'}\r\n            onChange={e => onColumnChange(e, 'size')}\r\n          >\r\n            <MenuItem value={'small'}>Small</MenuItem>\r\n            <MenuItem value={'medium'}>Medium</MenuItem>\r\n            <MenuItem value={'large'}>Large</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TextField\r\n          label=\"Width\"\r\n          value={column.width || ''}\r\n          onChange={e => onColumnChange(e, 'width')}\r\n        />\r\n      </Grid>\r\n\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ColumnCard","import { useReducer } from 'react'\r\n\r\nconst changeArrayObject = (_items, { event, index, key }) => {\r\n  const items = [..._items]\r\n  items.splice(index, 1, {\r\n    ...items[index],\r\n    [key]: event.target.value\r\n  })\r\n  return items\r\n}\r\n\r\nconst shiftArrayObject = (_items, { index, shift }) => {\r\n  const items = [..._items]\r\n  const item = items.splice(index, 1)\r\n  items.splice(index + shift, 0, item[0])\r\n  return items\r\n}\r\n\r\nconst removeArrayObject = (_items, { index }) => {\r\n  const items = [..._items]\r\n  items.splice(index, 1)\r\n  return items\r\n}\r\n\r\nconst onChangeColour = (colours, { key, value }) => {\r\n  if (value) {\r\n    return {\r\n      ...colours,\r\n      [key]: value\r\n    }\r\n  }\r\n  return colours\r\n}\r\n\r\nconst reducer = (_state, action) => {\r\n  const state = JSON.parse(JSON.stringify(_state))\r\n\r\n  switch(action.type) {\r\n    case 'setDefault':\r\n      const defaultPayload = JSON.parse(JSON.stringify(action.payload))\r\n      return { ...state, default: defaultPayload, current: defaultPayload }\r\n    case 'onColumnChange':\r\n      state.current.tableHead = changeArrayObject(state.current.tableHead, action.payload)\r\n      return state\r\n    case 'onColumnShift':\r\n      state.current.tableHead = shiftArrayObject(state.current.tableHead, action.payload)\r\n      return state\r\n    case 'onColumnAdd':\r\n      state.current.tableHead.push({ title: '', key: '', fontSize: 'medium', align: 'left' })\r\n      return state\r\n    case 'onColumnRemove':\r\n      state.current.tableHead = removeArrayObject(state.current.tableHead, action.payload)\r\n      return state\r\n    case 'onChangeColour':\r\n      state.current.colour = onChangeColour(state.current.colour, action.payload)\r\n      return state\r\n    case 'onResetColour':\r\n      state.current.colour[action.payload.key] = state.default.colour[action.payload.key]\r\n      return state\r\n    case 'onChangeMisc':\r\n      state.current[action.payload.key] = action.payload.event.target.value\r\n      return state\r\n    case 'onResetMisc':\r\n      state.current[action.payload.key] = state.default[action.payload.key]\r\n      return state\r\n    case 'onChangeCarouselMisc':\r\n      state.current.carousel[action.payload.key] = action.payload.event.target.value\r\n      return state\r\n    case 'onChangeCarouselImage':\r\n      state.current.carousel.images = changeArrayObject(state.current.carousel.images, action.payload)\r\n      return state\r\n    case 'onAddCarouselImage':\r\n      state.current.carousel.images.push({ src: '' })\r\n      return state\r\n    case 'onShiftCarouselImage':\r\n      state.current.carousel.images = shiftArrayObject(state.current.carousel.images, action.payload)\r\n      return state\r\n    case 'onRemoveCarouselImage':\r\n      state.current.carousel.images = removeArrayObject(state.current.carousel.images, action.payload)\r\n      return state\r\n    case 'onChangeWeather':\r\n      state.current.weather[action.payload.key] = action.payload.event.target.value\r\n      return state\r\n    case 'onResetWeather':\r\n      state.current.weather[action.payload.key] = state.default.weather[action.payload.key]\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst useConfigReducer = () => {\r\n  const initialState = {\r\n    default: {},\r\n    current: {},\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const dispatcher = {\r\n    setDefault: (defaultConfig) => dispatch({\r\n      type: 'setDefault', \r\n      payload: defaultConfig\r\n    }),\r\n\r\n    onColumnChange: (event, index, key) => dispatch({\r\n      type: 'onColumnChange',\r\n      payload: { event, index, key }\r\n    }),\r\n\r\n    onColumnShift: (index, shift) => dispatch({\r\n      type: 'onColumnShift',\r\n      payload: { index, shift }\r\n    }),\r\n\r\n    onColumnAdd: () => dispatch({ \r\n      type: 'onColumnAdd' \r\n    }),\r\n\r\n    onColumnRemove: (index) => dispatch({\r\n      type: 'onColumnRemove',\r\n      payload: { index }\r\n    }),\r\n\r\n    onChangeColour: (key, value) => dispatch({\r\n      type: 'onChangeColour',\r\n      payload: { key, value }\r\n    }),\r\n\r\n    onResetColour: (key) => dispatch({\r\n      type: 'onResetColour',\r\n      payload: { key }\r\n    }),\r\n\r\n    onChangeMisc: (event, key) => dispatch({\r\n      type: 'onChangeMisc',\r\n      payload: { event, key }\r\n    }),\r\n\r\n    onResetMisc: (key) => dispatch({\r\n      type: 'onResetMisc',\r\n      payload: { key }\r\n    }),\r\n\r\n    onChangeCarouselMisc: (event, key) => dispatch({\r\n      type: 'onChangeCarouselMisc',\r\n      payload: { event, key }\r\n    }),\r\n\r\n    onChangeCarouselImage: (event, index, key) => dispatch({\r\n      type: 'onChangeCarouselImage',\r\n      payload: { event, index, key }\r\n    }),\r\n\r\n    onAddCarouselImage: () => dispatch({ \r\n      type: 'onAddCarouselImage'\r\n    }),\r\n\r\n    onShiftCarouselImage: (index, shift) => dispatch({\r\n      type: 'onShiftCarouselImage',\r\n      payload: { index, shift }\r\n    }),\r\n\r\n    onRemoveCarouselImage: (index) => dispatch({\r\n      type: 'onRemoveCarouselImage',\r\n      payload: { index }\r\n    }),\r\n\r\n    onChangeWeather: (event, key) => dispatch({\r\n      type: 'onChangeWeather',\r\n      payload: { event, key }\r\n    }),\r\n\r\n    onResetWeather: (key) => dispatch({\r\n      type: 'onResetWeather',\r\n      payload: { key }\r\n    })\r\n  }\r\n\r\n  return [state.current, dispatcher]\r\n}\r\n\r\nexport default useConfigReducer","import { useState, useEffect } from 'react'\r\nimport fileDownload from 'js-file-download'\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  Tabs,\r\n  Tab\r\n} from '@material-ui/core'\r\nimport { \r\n  AddCircle as AddCircleIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Delete as DeleteIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n  SettingsBackupRestore as SettingsBackupRestoreIcon\r\n} from '@material-ui/icons'\r\nimport styled from 'styled-components'\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\nimport { IconHover } from './styles'\r\nimport RateBoard from '../RateBoard/RateBoard'\r\nimport ColumnCard from './ColumnCard'\r\nimport useConfigReducer from './useConfigReducer'\r\n\r\nconst Container = styled.div`\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n`\r\nconst PaperContainer = styled(Paper)`\r\n  margin: 0.5rem;\r\n  padding: 1rem;\r\n`\r\nconst SubTitle = styled.h2`\r\n  text-align: center;\r\n  margin: 0;\r\n  margin-bottom: 1rem;\r\n`\r\nconst PaperCard = styled(Paper)`\r\n  padding: 0.5rem;\r\n  width: 10rem;\r\n`\r\nconst BaseAddContainer = styled(Paper)`\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #f9f9f9;\r\n  }\r\n`\r\nconst AddColumnContainer = styled(BaseAddContainer)`\r\n  width: calc(10rem + 16px);\r\n  min-height: 12rem;\r\n`\r\nconst AddCarouselImageContainer = styled(BaseAddContainer)`\r\n  width: calc(10rem + 16px);\r\n  min-height: 6rem;\r\n`\r\nconst CenterButtonContainer = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst TextFieldContainer = styled.div`\r\n  width: 7rem;\r\n`\r\n\r\nconst colourColumns = [\r\n  { label: 'Background', key: 'background' },\r\n  { label: 'Header', key: 'header' },\r\n  { label: 'Even Row', key: 'even' },\r\n  { label: 'Odd Row', key: 'odd' },\r\n  { label: 'Divider', key: 'divider' },\r\n  { label: 'Font', key: 'font' },\r\n  { label: 'Footer', key: 'footer' },\r\n  { label: 'Weather Background', key: 'weatherBackground' },\r\n  { label: 'Weather Font', key: 'weatherFont' },\r\n]\r\n\r\nconst miscColumns = [\r\n  { label: 'Logo', key: 'logo' },\r\n  { label: 'Max Rows', key: 'maxRows', type: 'number' },\r\n  { label: 'Rows Interval', key: 'rowsInterval', type: 'number' },\r\n  { label: 'Date Position', key: 'datePosition', options: [\r\n    { label: 'None', key: 'none' },\r\n    { label: 'Top Left', key: 'top-left' },\r\n    { label: 'Top Right', key: 'top-right' },\r\n    { label: 'Bottom Left', key: 'bottom-left' },\r\n    { label: 'Bottom Right', key: 'bottom-right' },\r\n  ] }\r\n]\r\n\r\nconst weatherColumns = [\r\n  { label: 'API Key', key: 'apiKey' },\r\n  { label: 'Refresh Rate', key: 'interval', type: 'number' },\r\n  { label: 'Position', key: 'position', options: [\r\n    { label: 'None', key: 'none' },\r\n    { label: 'Left', key: 'left' },\r\n    { label: 'Right', key: 'right' },\r\n  ] },\r\n  { label: 'Units', key: 'units', options: [\r\n    { label: 'Metric', key: 'metric' },\r\n    { label: 'Imperial', key: 'imperial' },\r\n    { label: 'Kelvin', key: 'standard' },\r\n  ] }\r\n]\r\n\r\nconst Config = ({ defaultConfig, catalog }) => {\r\n  const [config, dispatcher] = useConfigReducer();\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [tabValue, setTabValue] = useState('columns');\r\n\r\n  const tableColumns = config.tableHead || [];\r\n  const tableColours = config.colour || {};\r\n  const tableCarousel = config.carousel || {};\r\n  const tableWeather = config.weather || {}\r\n\r\n  useEffect(() => {\r\n    dispatcher.setDefault(defaultConfig)\r\n  }, [defaultConfig]);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Rate Board Configuration</h1>\r\n\r\n      <PaperContainer elevation={3} style={{ padding: 0 }}>\r\n        <Tabs\r\n          value={tabValue}\r\n          onChange={(e, value) => setTabValue(value)}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab value=\"columns\" label=\"Columns\" />\r\n          <Tab value=\"colours\" label=\"Colours\" />\r\n          <Tab value=\"misc\" label=\"Misc\" />\r\n          <Tab value=\"carousel\" label=\"Carousel\" />\r\n          <Tab value=\"weather\" label=\"Weather\" />\r\n        </Tabs>\r\n      </PaperContainer>\r\n\r\n      <PaperContainer elevation={3}>\r\n        {tabValue === 'columns' && (\r\n          <>\r\n          <SubTitle>Columns</SubTitle>\r\n\r\n          <Grid container direction=\"row\" spacing={2}>\r\n            {tableColumns.map((col, index) => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <ColumnCard\r\n                    isFirst={index === 0}\r\n                    isLast={index === tableColumns.length - 1}\r\n                    column={col}\r\n                    onColumnShift={shift => dispatcher.onColumnShift(index, shift)}\r\n                    onColumnRemove={() => dispatcher.onColumnRemove(index)}\r\n                    onColumnChange={(e, key) => dispatcher.onColumnChange(e, index, key)}\r\n                  />\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n\r\n            <Grid item>\r\n              <AddColumnContainer onClick={dispatcher.onColumnAdd}>\r\n                <AddCircleIcon fontSize=\"large\" />\r\n              </AddColumnContainer>\r\n            </Grid>\r\n          </Grid>\r\n          </>\r\n        )}\r\n        \r\n        {tabValue === 'colours' && (\r\n          <>\r\n          <SubTitle>Colours</SubTitle>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n            {colourColumns.map(col => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                    <Grid item>\r\n                      <TextFieldContainer>\r\n                        <ColorPicker \r\n                          label={col.label}\r\n                          defaultValue=\"#000\"\r\n                          value={tableColours[col.key]}\r\n                          TextFieldProps={{ value: tableColours[col.key] }}\r\n                          onChange={value => dispatcher.onChangeColour(col.key, value)}\r\n                        />\r\n                      </TextFieldContainer>\r\n                    </Grid>\r\n  \r\n                    <Grid item>\r\n                      <IconHover display>\r\n                        <SettingsBackupRestoreIcon onClick={() => dispatcher.onResetColour(col.key)} />\r\n                      </IconHover>\r\n                    </Grid>\r\n                  </Grid>\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          </>\r\n        )}\r\n\r\n        {tabValue === 'misc' && (\r\n          <>\r\n          <SubTitle>Miscellaneous</SubTitle>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n            {miscColumns.map(col => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" wrap=\"nowrap\">\r\n                    <Grid item style={{ flexGrow: '1', marginRight: '1rem' }}>\r\n                      {col.options && col.options.length ? (\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id={`${col.key}-select-label`}>{col.label}</InputLabel>\r\n                          <Select\r\n                            labelId={`${col.key}-select-label`}\r\n                            id={`${col.key}-select`}\r\n                            value={config[col.key]}\r\n                            defaultValue={col.options[0].key}\r\n                            onChange={e => dispatcher.onChangeMisc(e, col.key)}\r\n                          >\r\n                            {col.options.map(option => <MenuItem value={option.key}>{option.label}</MenuItem>)}\r\n                          </Select>\r\n                        </FormControl>\r\n                      ) : (\r\n                        <TextFieldContainer>\r\n                          <TextField \r\n                            label={col.label}\r\n                            value={config[col.key]}\r\n                            type={col.type || 'text'}\r\n                            onChange={e => dispatcher.onChangeMisc(e, col.key)}\r\n                          />\r\n                        </TextFieldContainer>\r\n                      )}\r\n                    </Grid>\r\n  \r\n                    <Grid item>\r\n                      <IconHover display>\r\n                        <SettingsBackupRestoreIcon onClick={() => dispatcher.onResetMisc(col.key)} />\r\n                      </IconHover>\r\n                    </Grid>\r\n                  </Grid>\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          </>\r\n        )}\r\n\r\n        {tabValue === 'carousel' && (\r\n          <>\r\n          <SubTitle>Carousel</SubTitle>\r\n\r\n          <Grid container direction=\"column\" spacing={2}>\r\n            <Grid item>\r\n              <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n                <Grid item>\r\n                  <PaperCard elevation={1}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"position-select-label\">Position</InputLabel>\r\n                      <Select\r\n                        labelId=\"position-select-label\"\r\n                        id=\"position-select\"\r\n                        value={tableCarousel.position}\r\n                        defaultValue='none'\r\n                        onChange={e => dispatcher.onChangeCarouselMisc(e, 'position')}\r\n                      >\r\n                        <MenuItem value={'none'}>None</MenuItem>\r\n                        <MenuItem value={'top'}>Top</MenuItem>\r\n                        <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </PaperCard>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <PaperCard elevation={1}>\r\n                    <TextField \r\n                      label=\"Interval (ms)\"\r\n                      type='number'\r\n                      value={tableCarousel.interval || 4000}\r\n                      onChange={e => dispatcher.onChangeCarouselMisc(e, 'interval')}\r\n                    />\r\n                  </PaperCard>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n                {tableCarousel.images.map((image, index) => (\r\n                  <Grid item>\r\n                    <PaperCard elevation={1}>\r\n                      <Grid container spacing={1} direction=\"column\" justify=\"\" alignItems=\"stretch\">\r\n                        <Grid item>\r\n                          <Grid container direction=\"row\" justify=\"space-between\">\r\n                            <Grid item>\r\n                              <IconHover display={index !== 0}>\r\n                                <ArrowBackIcon onClick={() => dispatcher.onShiftCarouselImage(index, -1)} />\r\n                              </IconHover>\r\n                            </Grid>\r\n                            <Grid item>\r\n                              <IconHover display>\r\n                                <DeleteIcon onClick={() => dispatcher.onRemoveCarouselImage(index)} />\r\n                              </IconHover>\r\n                            </Grid>\r\n                            <Grid item>\r\n                              <IconHover display={index !== tableCarousel.images.length - 1}>\r\n                                <ArrowForwardIcon onClick={() => dispatcher.onShiftCarouselImage(index, 1)} />\r\n                              </IconHover>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                          <TextField \r\n                            label=\"Image Src\"\r\n                            value={image.src}\r\n                            onChange={e => dispatcher.onChangeCarouselImage(e, index, 'src')}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                    </PaperCard>\r\n                  </Grid>\r\n                ))}\r\n\r\n                <Grid item>\r\n                  <AddCarouselImageContainer onClick={dispatcher.onAddCarouselImage}>\r\n                    <AddCircleIcon fontSize=\"large\" />\r\n                  </AddCarouselImageContainer>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          </>\r\n        )}\r\n\r\n        {tabValue === 'weather' && (\r\n          <>\r\n          <SubTitle>Weather</SubTitle>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n            {weatherColumns.map(col => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" wrap=\"nowrap\">\r\n                    <Grid item style={{ flexGrow: '1', marginRight: '1rem' }}>\r\n                      {col.options && col.options.length ? (\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id={`${col.key}-select-label`}>{col.label}</InputLabel>\r\n                          <Select\r\n                            labelId={`${col.key}-select-label`}\r\n                            id={`${col.key}-select`}\r\n                            value={tableWeather[col.key]}\r\n                            defaultValue={col.options[0].key}\r\n                            onChange={e => dispatcher.onChangeWeather(e, col.key)}\r\n                          >\r\n                            {col.options.map(option => <MenuItem value={option.key}>{option.label}</MenuItem>)}\r\n                          </Select>\r\n                        </FormControl>\r\n                      ) : (\r\n                        <TextFieldContainer>\r\n                          <TextField \r\n                            label={col.label}\r\n                            value={tableWeather[col.key]}\r\n                            type={col.type || 'text'}\r\n                            onChange={e => dispatcher.onChangeWeather(e, col.key)}\r\n                          />\r\n                        </TextFieldContainer>\r\n                      )}\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <IconHover display>\r\n                        <SettingsBackupRestoreIcon \r\n                          onClick={() => dispatcher.onResetWeather(col.key)} \r\n                        />\r\n                      </IconHover>\r\n                    </Grid>\r\n                  </Grid>\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          </>\r\n        )}\r\n      </PaperContainer>\r\n\r\n      <CenterButtonContainer>\r\n        <Button \r\n          color=\"primary\"\r\n          onClick={() => setShowPreview(x => !x)}\r\n        >Toggle Preview</Button>\r\n      </CenterButtonContainer>\r\n\r\n      {showPreview && <RateBoard config={config} catalog={catalog} />}\r\n\r\n      <CenterButtonContainer>\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          onClick={() => fileDownload(JSON.stringify(config), 'config.json')}\r\n        >\r\n          Download\r\n        </Button>\r\n      </CenterButtonContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Config","import useLocationHash from './hooks/useLocationHash'\nimport useTokenStorage from './hooks/useTokenStorage'\nimport useConfig from './hooks/useConfig'\nimport useCatalog from './hooks/useCatalog'\n\nimport TokenModal from './components/TokenModal'\n\nimport RateBoard from './pages/RateBoard/RateBoard'\nimport Config from './pages/Config/Config'\n\nfunction App() {\n  const hash = useLocationHash();\n  const [token, setToken] = useTokenStorage();\n  const config = useConfig(token);\n  const catalog = useCatalog(token);\n  \n  if (!token) {\n    return <TokenModal open={!token} onSubmit={token => setToken(token)} />\n  }\n\n  switch (hash) {\n    case '#config':\n      return <Config defaultConfig={config} catalog={catalog} />\n    default: \n      return <RateBoard \n        config={config}\n        catalog={catalog}\n        removeToken={() => setToken('')}\n      />\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
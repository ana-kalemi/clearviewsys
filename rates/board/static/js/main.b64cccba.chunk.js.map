{"version":3,"sources":["pages/RateBoard/WeatherWidget.js","pages/RateBoard/TokenModal.js","hooks/useConfig.js","hooks/useCatalog.js","hooks/useTokenStorage.js","pages/RateBoard/RateBoard.js","pages/Config/styles.js","pages/Config/ColumnCard.js","pages/Config/useConfigReducer.js","pages/Config/Config.js","hooks/useLocationHash.js","App.js","reportWebVitals.js","index.js"],"names":["Title","styled","h3","CurrentTemp","MinMaxTemp","h5","getWeather","units","apiKey","setWeather","navigator","geolocation","getCurrentPosition","position","a","lat","coords","latitude","lon","longitude","axios","get","res","iconSrc","data","weather","icon","main","name","temp","Math","round","tempMin","temp_min","tempMax","temp_max","WeatherWidget","interval","useState","tempSuffix","metric","imperial","standard","useEffect","_interval","setInterval","clearInterval","Grid","container","direction","justify","alignItems","item","src","alt","Modal","BaseModal","Fade","BaseFade","ModalPaper","Paper","TokenModal","open","onSubmit","token","setToken","closeAfterTransition","in","elevation","event","preventDefault","spacing","TextField","variant","label","value","onChange","target","Button","type","getConfig","setConfig","headers","useConfig","config","getCatalog","setCatalog","parseXML","xml","timestamp","catalog","CATALOG","TIMESTAMP","rates","RATE","map","rate","isFlagged","ISFLAGGED","flagURL","FLAGURL","flag","iso","ISO","NAME","country","COUNTRY","id","ID","weBuy","WEBUY","weSell","WESELL","invBuy","INVBUY","invSell","INVSELL","useCatalog","useTokenStorage","state","setState","localStorage","getItem","setItem","Container","div","props","colour","Image","img","CarouselImage","FlagImageCell","size","FontCell","PaperContainer","ColouredTableCell","TableCell","fontColour","borderColour","cellDisplay","column","row","key","ImageCarousel","items","stopAutoPlayOnHover","swipe","indicators","navButtonsAlwaysInvisible","Number","RateBoard","jsonConfig","allRates","setAllRates","isAllRates","filter","length","setTimeout","firstRate","shift","rowsInterval","slice","maxRows","tableHead","carousel","background","logo","images","xs","style","backgroundColor","weatherBackground","color","weatherFont","TableContainer","Table","TableHead","datePosition","includes","TableRow","align","split","colSpan","header","divider","col","i","font","width","title","TableBody","odd","even","TableFooter","footer","IconHover","display","ColumnCard","onColumnShift","onColumnRemove","onColumnChange","isFirst","isLast","ArrowBack","onClick","Delete","ArrowForward","FormControl","fullWidth","InputLabel","Select","labelId","e","MenuItem","changeArrayObject","_items","index","splice","shiftArrayObject","removeArrayObject","reducer","_state","action","JSON","parse","stringify","defaultPayload","payload","default","current","push","fontSize","colours","onChangeColour","useConfigReducer","useReducer","dispatch","dispatcher","setDefault","defaultConfig","onColumnAdd","onResetColour","onChangeMisc","onResetMisc","onChangeCarouselMisc","onChangeCarouselImage","onAddCarouselImage","onShiftCarouselImage","onRemoveCarouselImage","onChangeWeather","onResetWeather","SubTitle","h2","PaperCard","BaseAddContainer","AddColumnContainer","AddCarouselImageContainer","CenterButtonContainer","TextFieldContainer","colourColumns","miscColumns","options","weatherColumns","Config","showPreview","setShowPreview","tabValue","setTabValue","tableColumns","tableColours","tableCarousel","tableWeather","padding","Tabs","indicatorColor","textColor","centered","Tab","AddCircle","defaultValue","TextFieldProps","SettingsBackupRestore","wrap","flexGrow","marginRight","option","image","x","fileDownload","useLocationHash","window","location","hash","setHash","onhashchange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b64cccba.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nconst Title = styled.h3`\r\n  margin: 0;\r\n`\r\nconst CurrentTemp = styled.h3`\r\n  margin: 0;\r\n`\r\nconst MinMaxTemp = styled.h5`\r\n  margin: 0.5rem 0;\r\n`\r\n\r\nconst baseUrl = 'https://api.openweathermap.org/data/2.5/weather'\r\n\r\nconst getWeather = (units, apiKey, setWeather) => {\r\n  navigator.geolocation.getCurrentPosition(async position => {\r\n    const lat = position.coords.latitude\r\n    const lon = position.coords.longitude\r\n\r\n    const res = await axios.get(`${baseUrl}?units=${units}&lat=${lat}&lon=${lon}&appid=${apiKey}`)\r\n    let iconSrc = ''\r\n    if (res.data.weather && res.data.weather[0]) {\r\n      const icon = res.data.weather[0].icon\r\n      iconSrc = `https://openweathermap.org/img/wn/${icon}@2x.png`\r\n    }\r\n    const { main, name } = res.data\r\n    setWeather({\r\n      iconSrc,\r\n      name,\r\n      temp: Math.round(main.temp),\r\n      tempMin: Math.round(main.temp_min),\r\n      tempMax: Math.round(main.temp_max)\r\n    })\r\n  })\r\n}\r\n\r\nconst WeatherWidget = ({ apiKey, units, interval }) => {\r\n  const [weather, setWeather] = useState({})\r\n\r\n  const tempSuffix = {\r\n    metric: '°C',\r\n    imperial: '°F',\r\n    standard: 'K'\r\n  }[units]\r\n\r\n  useEffect(() => {\r\n    getWeather(units, apiKey, setWeather)\r\n    const _interval = setInterval(() => {\r\n      getWeather(units, apiKey, setWeather)\r\n    }, (interval || 60 * 15) * 1000)\r\n    \r\n    return () => clearInterval(_interval)\r\n  }, [apiKey, units, interval])\r\n\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n      {weather.iconSrc && (\r\n        <Grid item>\r\n          <img src={weather.iconSrc} alt=\"Weather Icon\" />\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item>\r\n        <Title>{weather.name}</Title>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <CurrentTemp>{weather.temp}{tempSuffix}</CurrentTemp>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <MinMaxTemp>\r\n          {weather.tempMin}{tempSuffix} - {weather.tempMax}{tempSuffix}\r\n        </MinMaxTemp>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default WeatherWidget","import { useState } from 'react'\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Modal as BaseModal,\r\n  Fade as BaseFade,\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core'\r\nimport styled from 'styled-components'\r\n\r\nconst Modal = styled(BaseModal)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\nconst Fade = styled(BaseFade)`\r\n  :focus-visible {\r\n    outline: none;\r\n  }\r\n`\r\nconst ModalPaper = styled(Paper)`\r\n  padding: 1rem;\r\n`\r\n\r\nconst TokenModal = ({ open, onSubmit }) => {\r\n  const [token, setToken] = useState('')\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault()\r\n    onSubmit(token)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      closeAfterTransition\r\n    >\r\n      <Fade in={open}>\r\n        <ModalPaper elevation={3}>\r\n          <form onSubmit={onFormSubmit}>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              spacing={2}\r\n            >\r\n              <Grid item>\r\n                <TextField \r\n                  variant=\"outlined\" \r\n                  label=\"Token\"\r\n                  value={token}\r\n                  onChange={event => setToken(event.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item><Button type=\"submit\">Submit</Button></Grid>\r\n            </Grid>\r\n          </form>\r\n        </ModalPaper>\r\n      </Fade>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TokenModal","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst getConfig = async (setConfig) => {\r\n  const res = await axios.get('config.json', {\r\n    headers: { 'Cache-Control': 'no-cache' }\r\n  });\r\n  setConfig(res.data);\r\n}\r\n\r\nconst useConfig = () => {\r\n  const [config, setConfig] = useState({});\r\n\r\n  useEffect(() => {\r\n    getConfig(setConfig);\r\n  }, []);\r\n\r\n  return config;\r\n}\r\n\r\nexport default useConfig","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { parseStringPromise as parseXML } from 'xml2js';\r\n\r\nconst cleanCatalog = (catalog) => {\r\n  const timestamp = catalog.TIMESTAMP[0];\r\n  const rates = catalog.RATE.map(rate => ({\r\n    isFlagged: rate.ISFLAGGED[0] === '**',\r\n    flagURL: rate.FLAGURL[0],\r\n    flag: rate.FLAGURL[0],\r\n    iso: rate.ISO[0],\r\n    name: rate.NAME[0],\r\n    country: rate.COUNTRY[0],\r\n    id: rate.ID ? rate.ID[0] : '',\r\n    weBuy: rate.WEBUY[0],\r\n    weSell: rate.WESELL[0],\r\n    invBuy: rate.INVBUY[0],\r\n    invSell: rate.INVSELL[0]\r\n  }));\r\n\r\n  return { timestamp, rates }\r\n}\r\n\r\nconst getCatalog = async (setCatalog) => {\r\n  const res = await axios.get('rateswithcss.xml', {\r\n    headers: { 'Cache-Control': 'no-cache' }\r\n  });\r\n  const xml = await parseXML(res.data);\r\n  setCatalog(cleanCatalog(xml.CATALOG));\r\n};\r\n\r\nconst useCatalog = () => {\r\n  const [catalog, setCatalog] = useState({});\r\n\r\n  useEffect(() => {\r\n    getCatalog(setCatalog)\r\n    const interval = setInterval(() => getCatalog(setCatalog), 5000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return catalog\r\n}\r\n\r\nexport default useCatalog","import { useState, useEffect } from 'react'\r\n\r\nconst useTokenStorage = () => {\r\n  const [state, setState] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setState(localStorage.getItem('token'))\r\n  }, [])\r\n\r\n  const setToken = (token) => {\r\n    localStorage.setItem('token', token)\r\n    setState(token)\r\n  }\r\n\r\n  return [state, setToken]\r\n}\r\n\r\nexport default useTokenStorage","import { useState, useEffect } from 'react'\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  TableFooter,\r\n  Grid,\r\n} from '@material-ui/core'\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport styled from 'styled-components'\r\n\r\nimport WeatherWidget from './WeatherWidget'\r\nimport TokenModal from './TokenModal'\r\nimport useConfig from '../../hooks/useConfig'\r\nimport useCatalog from '../../hooks/useCatalog'\r\nimport useTokenStorage from '../../hooks/useTokenStorage'\r\n\r\nconst Container = styled.div`\r\n  background-color: ${props => props.colour};\r\n  min-height: 100vh;\r\n  padding: 1rem;\r\n`\r\nconst Image = styled.img`\r\n  display: block;\r\n  margin: auto;\r\n  max-height: 10rem;\r\n`\r\nconst CarouselImage = styled.img`\r\n  display: block;\r\n  margin: 0.5rem auto;\r\n  height: 30rem;\r\n`\r\nconst FlagImageCell = styled.img`\r\n  box-shadow: 0px 0px 3px 1px #a2a2a2;\r\n  width: ${props => {\r\n    switch(props.size) {\r\n      case 'small':\r\n        return '2.5rem';\r\n      case 'medium':\r\n        return '5rem';\r\n      case 'large':\r\n        return '7.5rem';\r\n      default:\r\n        return '5rem';\r\n    }\r\n  }};\r\n`\r\nconst FontCell = styled.div`\r\n  font-size: ${props => {\r\n    switch(props.size) {\r\n      case 'small':\r\n        return 'large';\r\n      case 'medium':\r\n        return 'x-large';\r\n      case 'large':\r\n        return 'xx-large';\r\n      default:\r\n        return 'x-large';\r\n    }\r\n  }};\r\n`\r\nconst PaperContainer = styled(Paper)`\r\n  overflow: auto;\r\n  height: 100%;\r\n\r\n  th {\r\n    font-weight: bold;\r\n  }\r\n`\r\nconst ColouredTableCell = styled(TableCell)`\r\n  color: ${props => props.fontColour} !important;\r\n  background-color: ${props => props.colour};\r\n  border-bottom-color: ${props => props.borderColour} !important;\r\n`\r\n\r\nconst cellDisplay = (column, row) => {\r\n  switch(column.key) {\r\n    case 'flag':\r\n      return <FlagImageCell\r\n        size={column.size}\r\n        src={row[column.key]}\r\n        alt={row[column.key]}\r\n      />\r\n    default:\r\n      return <FontCell size={column.size}>{row[column.key]}</FontCell>\r\n  }\r\n}\r\n\r\nconst ImageCarousel = ({ items, interval }) => {\r\n  return (\r\n    <Carousel\r\n      stopAutoPlayOnHover={false}\r\n      swipe={false}\r\n      indicators={false}\r\n      navButtonsAlwaysInvisible={true}\r\n      interval={Number(interval) * 1000}\r\n    >\r\n      {items.map(item => <CarouselImage src={item.src} />)}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nconst RateBoard = ({ config }) => {\r\n  const jsonConfig = useConfig();\r\n  const catalog = useCatalog();\r\n  const [allRates, setAllRates] = useState([])\r\n  const [token, setToken] = useTokenStorage()\r\n\r\n  config = config || jsonConfig;\r\n\r\n  useEffect(() => {\r\n    if (config.isAllRates) {\r\n      setAllRates(catalog.rates || [])\r\n    } else {\r\n      setAllRates((catalog.rates || []).filter(rate => rate.isFlagged))\r\n    }\r\n  }, [catalog.rates?.length])\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      const rates = [...allRates]\r\n      if (rates.length > 0) {\r\n        const firstRate = rates.shift();\r\n        setAllRates([...rates, firstRate])\r\n      }\r\n    }, Number(config.rowsInterval) * 1000)\r\n  }, [allRates, config.rowsInterval])\r\n\r\n  const rates = allRates.slice(0, Number(config.maxRows));\r\n\r\n  const tableHead = config.tableHead || [];\r\n  const colour = config.colour || {};\r\n  const carousel = config.carousel || {};\r\n  const weather = config.weather || {};\r\n\r\n  const timestamp = <FontCell>{catalog.timestamp}</FontCell> || '';\r\n\r\n  return (\r\n    <>\r\n    <TokenModal open={!token} onSubmit={token => setToken(token)} />\r\n\r\n    <Container colour={colour.background}>\r\n      <Image src={config.logo} alt=\"logo\" />\r\n\r\n      {carousel.position === 'top' && (\r\n        <ImageCarousel items={carousel.images} interval={Number(carousel.interval)} />\r\n      )}\r\n\r\n      <Grid container spacing={2}>\r\n        {weather.position === 'left' && (\r\n          <Grid item xs={2}>\r\n            <PaperContainer style={{ \r\n              backgroundColor: colour.weatherBackground, \r\n              color: colour.weatherFont\r\n            }}>\r\n              <WeatherWidget apiKey={weather.apiKey} units={weather.units} interval={weather.interval} />\r\n            </PaperContainer>\r\n          </Grid>\r\n        )}\r\n\r\n        <Grid item xs={weather.position === 'none' ? 12 : 10}>\r\n          <PaperContainer elevation={3}>\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  {config.datePosition && config.datePosition.includes('top') && (\r\n                    <TableRow>\r\n                      <ColouredTableCell \r\n                        align={config.datePosition.split('-')[1]}\r\n                        colSpan={tableHead.length}\r\n                        colour={colour.header}\r\n                        borderColour={colour.divider}\r\n                        fontColour={'rgba(0, 0, 0, 0.54)'}\r\n                      >\r\n                        {timestamp}\r\n                      </ColouredTableCell>\r\n                    </TableRow>\r\n                  )}\r\n                  <TableRow>\r\n                    {tableHead.map((col, i) => (\r\n                      <ColouredTableCell \r\n                        key={col.key} \r\n                        align={col.align} \r\n                        colour={colour.header}\r\n                        borderColour={colour.divider}\r\n                        fontColour={colour.font}\r\n                        style={{ width: col.width }}\r\n                      >\r\n                        <FontCell>{col.title}</FontCell>\r\n                      </ColouredTableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {rates.map((row, i) => (\r\n                    <TableRow key={row.iso}>\r\n                      {tableHead.map(col => (\r\n                        <ColouredTableCell \r\n                          key={`${row.iso}-${col.key}`}\r\n                          align={col.align}\r\n                          colour={!!(i%2) ? colour.odd : colour.even}\r\n                          borderColour={colour.divider}\r\n                          fontColour={colour.font}\r\n                        >\r\n                          {cellDisplay(col, row)}\r\n                        </ColouredTableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n\r\n                {config.datePosition && config.datePosition.includes('bottom') && (\r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <ColouredTableCell \r\n                        align={config.datePosition.split('-')[1]}\r\n                        colSpan={tableHead.length}\r\n                        colour={colour.footer}\r\n                        borderColour={colour.footer}\r\n                        fontColour={colour.font}\r\n                      >\r\n                        {timestamp}\r\n                      </ColouredTableCell>\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </PaperContainer>\r\n        </Grid>\r\n\r\n        {weather.position === 'right' && (\r\n          <Grid item xs={2}>\r\n            <PaperContainer style={{ \r\n              backgroundColor: colour.weatherBackground, \r\n              color: colour.weatherFont\r\n            }}>\r\n              <WeatherWidget apiKey={weather.apiKey} units={weather.units} interval={weather.interval} />\r\n            </PaperContainer>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n\r\n      {carousel.position === 'bottom' && (\r\n        <ImageCarousel items={carousel.images} interval={carousel.interval} />\r\n      )}\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RateBoard;\r\n","import styled from 'styled-components'\r\n\r\nconst IconHover = styled.div`\r\n  width: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  svg {\r\n    ${props => props.display ? '' : 'display: none;'}\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  IconHover\r\n}","import {\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport {\r\n  ArrowBack as ArrowBackIcon,\r\n  Delete as DeleteIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n} from '@material-ui/icons'\r\n\r\nimport { IconHover } from './styles'\r\n\r\nconst ColumnCard = ({ onColumnShift, onColumnRemove, onColumnChange, isFirst, isLast, column }) => {\r\n  return (\r\n    <Grid container spacing={1} direction=\"column\" justify=\"\" alignItems=\"stretch\">\r\n  \r\n      <Grid item>\r\n        <Grid container direction=\"row\" justify=\"space-between\">\r\n          <Grid item>\r\n            <IconHover display={!isFirst}>\r\n              <ArrowBackIcon onClick={() => onColumnShift(-1)} />\r\n            </IconHover>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconHover display>\r\n              <DeleteIcon onClick={onColumnRemove} />\r\n            </IconHover>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconHover display={!isLast}>\r\n              <ArrowForwardIcon onClick={() => onColumnShift(1)} />\r\n            </IconHover>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"field-select-label\">Field</InputLabel>\r\n          <Select\r\n            labelId=\"field-select-label\"\r\n            id=\"field-select\"\r\n            value={column.key}\r\n            onChange={e => onColumnChange(e, 'key')}\r\n          >\r\n            <MenuItem value={'flag'}>Flag</MenuItem>\r\n            <MenuItem value={'iso'}>ISO</MenuItem>\r\n            <MenuItem value={'name'}>Name</MenuItem>\r\n            <MenuItem value={'country'}>Country</MenuItem>\r\n            <MenuItem value={'weBuy'}>We Buy</MenuItem>\r\n            <MenuItem value={'weSell'}>We Sell</MenuItem>\r\n            <MenuItem value={'invBuy'}>Inv Buy</MenuItem>\r\n            <MenuItem value={'invSell'}>Inv Sell</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TextField \r\n          label=\"Field Name\"\r\n          value={column.title}\r\n          onChange={e => onColumnChange(e, 'title')}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"align-select-label\">Align</InputLabel>\r\n          <Select\r\n            labelId=\"align-select-label\"\r\n            id=\"align-select\"\r\n            value={column.align || 'left'}\r\n            onChange={e => onColumnChange(e, 'align')}\r\n          >\r\n            <MenuItem value={'center'}>Center</MenuItem>\r\n            <MenuItem value={'left'}>Left</MenuItem>\r\n            <MenuItem value={'right'}>Right</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"size-select-label\">Size</InputLabel>\r\n          <Select\r\n            labelId=\"size-select-label\"\r\n            id=\"size-select\"\r\n            value={column.size || 'medium'}\r\n            onChange={e => onColumnChange(e, 'size')}\r\n          >\r\n            <MenuItem value={'small'}>Small</MenuItem>\r\n            <MenuItem value={'medium'}>Medium</MenuItem>\r\n            <MenuItem value={'large'}>Large</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TextField\r\n          label=\"Width\"\r\n          value={column.width || ''}\r\n          onChange={e => onColumnChange(e, 'width')}\r\n        />\r\n      </Grid>\r\n\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ColumnCard","import { useReducer } from 'react'\r\n\r\nconst changeArrayObject = (_items, { event, index, key }) => {\r\n  const items = [..._items]\r\n  items.splice(index, 1, {\r\n    ...items[index],\r\n    [key]: event.target.value\r\n  })\r\n  return items\r\n}\r\n\r\nconst shiftArrayObject = (_items, { index, shift }) => {\r\n  const items = [..._items]\r\n  const item = items.splice(index, 1)\r\n  items.splice(index + shift, 0, item[0])\r\n  return items\r\n}\r\n\r\nconst removeArrayObject = (_items, { index }) => {\r\n  const items = [..._items]\r\n  items.splice(index, 1)\r\n  return items\r\n}\r\n\r\nconst onChangeColour = (colours, { key, value }) => {\r\n  if (value) {\r\n    return {\r\n      ...colours,\r\n      [key]: value\r\n    }\r\n  }\r\n  return colours\r\n}\r\n\r\nconst reducer = (_state, action) => {\r\n  const state = JSON.parse(JSON.stringify(_state))\r\n\r\n  switch(action.type) {\r\n    case 'setDefault':\r\n      const defaultPayload = JSON.parse(JSON.stringify(action.payload))\r\n      return { ...state, default: defaultPayload, current: defaultPayload }\r\n    case 'onColumnChange':\r\n      state.current.tableHead = changeArrayObject(state.current.tableHead, action.payload)\r\n      return state\r\n    case 'onColumnShift':\r\n      state.current.tableHead = shiftArrayObject(state.current.tableHead, action.payload)\r\n      return state\r\n    case 'onColumnAdd':\r\n      state.current.tableHead.push({ title: '', key: '', fontSize: 'medium', align: 'left' })\r\n      return state\r\n    case 'onColumnRemove':\r\n      state.current.tableHead = removeArrayObject(state.current.tableHead, action.payload)\r\n      return state\r\n    case 'onChangeColour':\r\n      state.current.colour = onChangeColour(state.current.colour, action.payload)\r\n      return state\r\n    case 'onResetColour':\r\n      state.current.colour[action.payload.key] = state.default.colour[action.payload.key]\r\n      return state\r\n    case 'onChangeMisc':\r\n      state.current[action.payload.key] = action.payload.event.target.value\r\n      return state\r\n    case 'onResetMisc':\r\n      state.current[action.payload.key] = state.default[action.payload.key]\r\n      return state\r\n    case 'onChangeCarouselMisc':\r\n      state.current.carousel[action.payload.key] = action.payload.event.target.value\r\n      return state\r\n    case 'onChangeCarouselImage':\r\n      state.current.carousel.images = changeArrayObject(state.current.carousel.images, action.payload)\r\n      return state\r\n    case 'onAddCarouselImage':\r\n      state.current.carousel.images.push({ src: '' })\r\n      return state\r\n    case 'onShiftCarouselImage':\r\n      state.current.carousel.images = shiftArrayObject(state.current.carousel.images, action.payload)\r\n      return state\r\n    case 'onRemoveCarouselImage':\r\n      state.current.carousel.images = removeArrayObject(state.current.carousel.images, action.payload)\r\n      return state\r\n    case 'onChangeWeather':\r\n      state.current.weather[action.payload.key] = action.payload.event.target.value\r\n      return state\r\n    case 'onResetWeather':\r\n      state.current.weather[action.payload.key] = state.default.weather[action.payload.key]\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst useConfigReducer = () => {\r\n  const initialState = {\r\n    default: {},\r\n    current: {},\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const dispatcher = {\r\n    setDefault: (defaultConfig) => dispatch({\r\n      type: 'setDefault', \r\n      payload: defaultConfig\r\n    }),\r\n\r\n    onColumnChange: (event, index, key) => dispatch({\r\n      type: 'onColumnChange',\r\n      payload: { event, index, key }\r\n    }),\r\n\r\n    onColumnShift: (index, shift) => dispatch({\r\n      type: 'onColumnShift',\r\n      payload: { index, shift }\r\n    }),\r\n\r\n    onColumnAdd: () => dispatch({ \r\n      type: 'onColumnAdd' \r\n    }),\r\n\r\n    onColumnRemove: (index) => dispatch({\r\n      type: 'onColumnRemove',\r\n      payload: { index }\r\n    }),\r\n\r\n    onChangeColour: (key, value) => dispatch({\r\n      type: 'onChangeColour',\r\n      payload: { key, value }\r\n    }),\r\n\r\n    onResetColour: (key) => dispatch({\r\n      type: 'onResetColour',\r\n      payload: { key }\r\n    }),\r\n\r\n    onChangeMisc: (event, key) => dispatch({\r\n      type: 'onChangeMisc',\r\n      payload: { event, key }\r\n    }),\r\n\r\n    onResetMisc: (key) => dispatch({\r\n      type: 'onResetMisc',\r\n      payload: { key }\r\n    }),\r\n\r\n    onChangeCarouselMisc: (event, key) => dispatch({\r\n      type: 'onChangeCarouselMisc',\r\n      payload: { event, key }\r\n    }),\r\n\r\n    onChangeCarouselImage: (event, index, key) => dispatch({\r\n      type: 'onChangeCarouselImage',\r\n      payload: { event, index, key }\r\n    }),\r\n\r\n    onAddCarouselImage: () => dispatch({ \r\n      type: 'onAddCarouselImage'\r\n    }),\r\n\r\n    onShiftCarouselImage: (index, shift) => dispatch({\r\n      type: 'onShiftCarouselImage',\r\n      payload: { index, shift }\r\n    }),\r\n\r\n    onRemoveCarouselImage: (index) => dispatch({\r\n      type: 'onRemoveCarouselImage',\r\n      payload: { index }\r\n    }),\r\n\r\n    onChangeWeather: (event, key) => dispatch({\r\n      type: 'onChangeWeather',\r\n      payload: { event, key }\r\n    }),\r\n\r\n    onResetWeather: (key) => dispatch({\r\n      type: 'onResetWeather',\r\n      payload: { key }\r\n    })\r\n  }\r\n\r\n  return [state.current, dispatcher]\r\n}\r\n\r\nexport default useConfigReducer","import { useState, useEffect } from 'react'\r\nimport fileDownload from 'js-file-download'\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  Tabs,\r\n  Tab\r\n} from '@material-ui/core'\r\nimport { \r\n  AddCircle as AddCircleIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Delete as DeleteIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n  SettingsBackupRestore as SettingsBackupRestoreIcon\r\n} from '@material-ui/icons'\r\nimport styled from 'styled-components'\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\nimport { IconHover } from './styles'\r\nimport RateBoard from '../RateBoard/RateBoard'\r\nimport ColumnCard from './ColumnCard'\r\nimport useConfig from '../../hooks/useConfig'\r\nimport useConfigReducer from './useConfigReducer'\r\n\r\nconst Container = styled.div`\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n`\r\nconst PaperContainer = styled(Paper)`\r\n  margin: 0.5rem;\r\n  padding: 1rem;\r\n`\r\nconst SubTitle = styled.h2`\r\n  text-align: center;\r\n  margin: 0;\r\n  margin-bottom: 1rem;\r\n`\r\nconst PaperCard = styled(Paper)`\r\n  padding: 0.5rem;\r\n  width: 10rem;\r\n`\r\nconst BaseAddContainer = styled(Paper)`\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #f9f9f9;\r\n  }\r\n`\r\nconst AddColumnContainer = styled(BaseAddContainer)`\r\n  width: calc(10rem + 16px);\r\n  min-height: 12rem;\r\n`\r\nconst AddCarouselImageContainer = styled(BaseAddContainer)`\r\n  width: calc(10rem + 16px);\r\n  min-height: 6rem;\r\n`\r\nconst CenterButtonContainer = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst TextFieldContainer = styled.div`\r\n  width: 7rem;\r\n`\r\n\r\nconst colourColumns = [\r\n  { label: 'Background', key: 'background' },\r\n  { label: 'Header', key: 'header' },\r\n  { label: 'Even Row', key: 'even' },\r\n  { label: 'Odd Row', key: 'odd' },\r\n  { label: 'Divider', key: 'divider' },\r\n  { label: 'Font', key: 'font' },\r\n  { label: 'Footer', key: 'footer' },\r\n  { label: 'Weather Background', key: 'weatherBackground' },\r\n  { label: 'Weather Font', key: 'weatherFont' },\r\n]\r\n\r\nconst miscColumns = [\r\n  { label: 'Logo', key: 'logo' },\r\n  { label: 'Max Rows', key: 'maxRows', type: 'number' },\r\n  { label: 'Rows Interval', key: 'rowsInterval', type: 'number' },\r\n  { label: 'Date Position', key: 'datePosition', options: [\r\n    { label: 'None', key: 'none' },\r\n    { label: 'Top Left', key: 'top-left' },\r\n    { label: 'Top Right', key: 'top-right' },\r\n    { label: 'Bottom Left', key: 'bottom-left' },\r\n    { label: 'Bottom Right', key: 'bottom-right' },\r\n  ] }\r\n]\r\n\r\nconst weatherColumns = [\r\n  { label: 'API Key', key: 'apiKey' },\r\n  { label: 'Refresh Rate', key: 'interval', type: 'number' },\r\n  { label: 'Position', key: 'position', options: [\r\n    { label: 'None', key: 'none' },\r\n    { label: 'Left', key: 'left' },\r\n    { label: 'Right', key: 'right' },\r\n  ] },\r\n  { label: 'Units', key: 'units', options: [\r\n    { label: 'Metric', key: 'metric' },\r\n    { label: 'Imperial', key: 'imperial' },\r\n    { label: 'Kelvin', key: 'standard' },\r\n  ] }\r\n]\r\n\r\nconst Config = () => {\r\n  const defaultConfig = useConfig();\r\n  const [config, dispatcher] = useConfigReducer();\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [tabValue, setTabValue] = useState('columns');\r\n\r\n  const tableColumns = config.tableHead || [];\r\n  const tableColours = config.colour || {};\r\n  const tableCarousel = config.carousel || {};\r\n  const tableWeather = config.weather || {}\r\n\r\n  useEffect(() => {\r\n    dispatcher.setDefault(defaultConfig)\r\n  }, [defaultConfig]);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Rate Board Configuration</h1>\r\n\r\n      <PaperContainer elevation={3} style={{ padding: 0 }}>\r\n        <Tabs\r\n          value={tabValue}\r\n          onChange={(e, value) => setTabValue(value)}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab value=\"columns\" label=\"Columns\" />\r\n          <Tab value=\"colours\" label=\"Colours\" />\r\n          <Tab value=\"misc\" label=\"Misc\" />\r\n          <Tab value=\"carousel\" label=\"Carousel\" />\r\n          <Tab value=\"weather\" label=\"Weather\" />\r\n        </Tabs>\r\n      </PaperContainer>\r\n\r\n      <PaperContainer elevation={3}>\r\n        {tabValue === 'columns' && (\r\n          <>\r\n          <SubTitle>Columns</SubTitle>\r\n\r\n          <Grid container direction=\"row\" spacing={2}>\r\n            {tableColumns.map((col, index) => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <ColumnCard\r\n                    isFirst={index === 0}\r\n                    isLast={index === tableColumns.length - 1}\r\n                    column={col}\r\n                    onColumnShift={shift => dispatcher.onColumnShift(index, shift)}\r\n                    onColumnRemove={() => dispatcher.onColumnRemove(index)}\r\n                    onColumnChange={(e, key) => dispatcher.onColumnChange(e, index, key)}\r\n                  />\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n\r\n            <Grid item>\r\n              <AddColumnContainer onClick={dispatcher.onColumnAdd}>\r\n                <AddCircleIcon fontSize=\"large\" />\r\n              </AddColumnContainer>\r\n            </Grid>\r\n          </Grid>\r\n          </>\r\n        )}\r\n        \r\n        {tabValue === 'colours' && (\r\n          <>\r\n          <SubTitle>Colours</SubTitle>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n            {colourColumns.map(col => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                    <Grid item>\r\n                      <TextFieldContainer>\r\n                        <ColorPicker \r\n                          label={col.label}\r\n                          defaultValue=\"#000\"\r\n                          value={tableColours[col.key]}\r\n                          TextFieldProps={{ value: tableColours[col.key] }}\r\n                          onChange={value => dispatcher.onChangeColour(col.key, value)}\r\n                        />\r\n                      </TextFieldContainer>\r\n                    </Grid>\r\n  \r\n                    <Grid item>\r\n                      <IconHover display>\r\n                        <SettingsBackupRestoreIcon onClick={() => dispatcher.onResetColour(col.key)} />\r\n                      </IconHover>\r\n                    </Grid>\r\n                  </Grid>\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          </>\r\n        )}\r\n\r\n        {tabValue === 'misc' && (\r\n          <>\r\n          <SubTitle>Miscellaneous</SubTitle>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n            {miscColumns.map(col => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" wrap=\"nowrap\">\r\n                    <Grid item style={{ flexGrow: '1', marginRight: '1rem' }}>\r\n                      {col.options && col.options.length ? (\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id={`${col.key}-select-label`}>{col.label}</InputLabel>\r\n                          <Select\r\n                            labelId={`${col.key}-select-label`}\r\n                            id={`${col.key}-select`}\r\n                            value={config[col.key]}\r\n                            defaultValue={col.options[0].key}\r\n                            onChange={e => dispatcher.onChangeMisc(e, col.key)}\r\n                          >\r\n                            {col.options.map(option => <MenuItem value={option.key}>{option.label}</MenuItem>)}\r\n                          </Select>\r\n                        </FormControl>\r\n                      ) : (\r\n                        <TextFieldContainer>\r\n                          <TextField \r\n                            label={col.label}\r\n                            value={config[col.key]}\r\n                            type={col.type || 'text'}\r\n                            onChange={e => dispatcher.onChangeMisc(e, col.key)}\r\n                          />\r\n                        </TextFieldContainer>\r\n                      )}\r\n                    </Grid>\r\n  \r\n                    <Grid item>\r\n                      <IconHover display>\r\n                        <SettingsBackupRestoreIcon onClick={() => dispatcher.onResetMisc(col.key)} />\r\n                      </IconHover>\r\n                    </Grid>\r\n                  </Grid>\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          </>\r\n        )}\r\n\r\n        {tabValue === 'carousel' && (\r\n          <>\r\n          <SubTitle>Carousel</SubTitle>\r\n\r\n          <Grid container direction=\"column\" spacing={2}>\r\n            <Grid item>\r\n              <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n                <Grid item>\r\n                  <PaperCard elevation={1}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"position-select-label\">Position</InputLabel>\r\n                      <Select\r\n                        labelId=\"position-select-label\"\r\n                        id=\"position-select\"\r\n                        value={tableCarousel.position}\r\n                        defaultValue='none'\r\n                        onChange={e => dispatcher.onChangeCarouselMisc(e, 'position')}\r\n                      >\r\n                        <MenuItem value={'none'}>None</MenuItem>\r\n                        <MenuItem value={'top'}>Top</MenuItem>\r\n                        <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </PaperCard>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <PaperCard elevation={1}>\r\n                    <TextField \r\n                      label=\"Interval (ms)\"\r\n                      type='number'\r\n                      value={tableCarousel.interval || 4000}\r\n                      onChange={e => dispatcher.onChangeCarouselMisc(e, 'interval')}\r\n                    />\r\n                  </PaperCard>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n                {tableCarousel.images.map((image, index) => (\r\n                  <Grid item>\r\n                    <PaperCard elevation={1}>\r\n                      <Grid container spacing={1} direction=\"column\" justify=\"\" alignItems=\"stretch\">\r\n                        <Grid item>\r\n                          <Grid container direction=\"row\" justify=\"space-between\">\r\n                            <Grid item>\r\n                              <IconHover display={index !== 0}>\r\n                                <ArrowBackIcon onClick={() => dispatcher.onShiftCarouselImage(index, -1)} />\r\n                              </IconHover>\r\n                            </Grid>\r\n                            <Grid item>\r\n                              <IconHover display>\r\n                                <DeleteIcon onClick={() => dispatcher.onRemoveCarouselImage(index)} />\r\n                              </IconHover>\r\n                            </Grid>\r\n                            <Grid item>\r\n                              <IconHover display={index !== tableCarousel.images.length - 1}>\r\n                                <ArrowForwardIcon onClick={() => dispatcher.onShiftCarouselImage(index, 1)} />\r\n                              </IconHover>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                          <TextField \r\n                            label=\"Image Src\"\r\n                            value={image.src}\r\n                            onChange={e => dispatcher.onChangeCarouselImage(e, index, 'src')}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                    </PaperCard>\r\n                  </Grid>\r\n                ))}\r\n\r\n                <Grid item>\r\n                  <AddCarouselImageContainer onClick={dispatcher.onAddCarouselImage}>\r\n                    <AddCircleIcon fontSize=\"large\" />\r\n                  </AddCarouselImageContainer>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          </>\r\n        )}\r\n\r\n        {tabValue === 'weather' && (\r\n          <>\r\n          <SubTitle>Weather</SubTitle>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n            {weatherColumns.map(col => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" wrap=\"nowrap\">\r\n                    <Grid item style={{ flexGrow: '1', marginRight: '1rem' }}>\r\n                      {col.options && col.options.length ? (\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id={`${col.key}-select-label`}>{col.label}</InputLabel>\r\n                          <Select\r\n                            labelId={`${col.key}-select-label`}\r\n                            id={`${col.key}-select`}\r\n                            value={tableWeather[col.key]}\r\n                            defaultValue={col.options[0].key}\r\n                            onChange={e => dispatcher.onChangeWeather(e, col.key)}\r\n                          >\r\n                            {col.options.map(option => <MenuItem value={option.key}>{option.label}</MenuItem>)}\r\n                          </Select>\r\n                        </FormControl>\r\n                      ) : (\r\n                        <TextFieldContainer>\r\n                          <TextField \r\n                            label={col.label}\r\n                            value={tableWeather[col.key]}\r\n                            type={col.type || 'text'}\r\n                            onChange={e => dispatcher.onChangeWeather(e, col.key)}\r\n                          />\r\n                        </TextFieldContainer>\r\n                      )}\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <IconHover display>\r\n                        <SettingsBackupRestoreIcon \r\n                          onClick={() => dispatcher.onResetWeather(col.key)} \r\n                        />\r\n                      </IconHover>\r\n                    </Grid>\r\n                  </Grid>\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          </>\r\n        )}\r\n      </PaperContainer>\r\n\r\n      <CenterButtonContainer>\r\n        <Button \r\n          color=\"primary\"\r\n          onClick={() => setShowPreview(x => !x)}\r\n        >Toggle Preview</Button>\r\n      </CenterButtonContainer>\r\n\r\n      {showPreview && <RateBoard config={config} />}\r\n\r\n      <CenterButtonContainer>\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          onClick={() => fileDownload(JSON.stringify(config), 'config.json')}\r\n        >\r\n          Download\r\n        </Button>\r\n      </CenterButtonContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Config","import { useState, useEffect } from 'react'\r\n\r\nconst useLocationHash = () => {\r\n    const [hash, setHash] = useState(window.location.hash);\r\n\r\n    useEffect(() => {\r\n      window.onhashchange = (event => {\r\n        setHash(event.target.location.hash)\r\n      })\r\n    }, [])\r\n\r\n    return hash\r\n  }\r\n\r\nexport default useLocationHash","import RateBoard from './pages/RateBoard/RateBoard'\nimport Config from './pages/Config/Config'\nimport useLocationHash from './hooks/useLocationHash'\n\nfunction App() {\n  const hash = useLocationHash()\n  switch (hash) {\n    case '#config':\n      return <Config />\n    default: \n      return <RateBoard />\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
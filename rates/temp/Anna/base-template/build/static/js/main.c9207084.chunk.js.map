{"version":3,"sources":["hooks/useConfig.js","hooks/useCatalog.js","pages/RateBoard.js","pages/Config.js","hooks/useLocationHash.js","App.js","reportWebVitals.js","index.js"],"names":["getConfig","setConfig","a","axios","get","headers","res","data","useConfig","useState","config","useEffect","FlagImage","styled","img","getCatalog","setCatalog","parseXML","xml","timestamp","catalog","CATALOG","TIMESTAMP","rates","RATE","map","rate","isFlagged","ISFLAGGED","flagURL","FLAGURL","flag","src","alt","iso","ISO","name","NAME","country","COUNTRY","id","ID","weBuy","WEBUY","weSell","WESELL","invBuy","INVBUY","invSell","INVSELL","useCatalog","interval","setInterval","clearInterval","Container","div","props","colour","Image","PaperContainer","Paper","ColouredTableCell","TableCell","fontColour","borderColour","RateBoard","jsonConfig","tableHead","background","logo","elevation","TableContainer","Table","TableHead","TableRow","col","i","align","header","divider","font","title","key","TableBody","filter","odd","even","TableFooter","colSpan","length","footer","SubTitle","h2","PaperCard","AddColumnContainer","IconHover","display","CenterButtonContainer","TextFieldContainer","colourColumns","label","miscColumns","Config","defaultConfig","showPreview","setShowPreview","tabValue","setTabValue","tableColumns","tableColours","onColumnChange","event","index","splice","target","value","old","onColumnShift","shift","item","style","padding","Tabs","onChange","e","indicatorColor","textColor","centered","Tab","Grid","container","direction","spacing","justify","alignItems","ArrowBack","onClick","Delete","onColumnRemove","ArrowForward","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","TextField","defaultValue","AddCircle","fontSize","TextFieldProps","color","SettingsBackupRestore","Button","x","variant","fileDownload","JSON","stringify","useLocationHash","window","location","hash","setHash","onhashchange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9207084.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst getConfig = async (setConfig) => {\r\n  const res = await axios.get('config.json', {\r\n    headers: { 'Cache-Control': 'no-cache' }\r\n  });\r\n  setConfig(res.data);\r\n}\r\n\r\nconst useConfig = () => {\r\n  const [config, setConfig] = useState({});\r\n\r\n  useEffect(() => {\r\n    getConfig(setConfig);\r\n  }, []);\r\n\r\n  return config;\r\n}\r\n\r\nexport default useConfig","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components'\r\nimport { parseStringPromise as parseXML } from 'xml2js';\r\n\r\nconst FlagImage = styled.img`\r\n  max-width: 5rem;\r\n  box-shadow: 0px 0px 3px 1px #a2a2a2;\r\n`\r\n\r\nconst cleanCatalog = (catalog) => {\r\n  const timestamp = catalog.TIMESTAMP[0];\r\n  const rates = catalog.RATE.map(rate => ({\r\n    isFlagged: rate.ISFLAGGED[0] === '**' ? true : false,\r\n    flagURL: rate.FLAGURL[0],\r\n    flag: <FlagImage src={rate.FLAGURL[0]} alt={rate.FLAGURL[0]} />,\r\n    iso: rate.ISO[0],\r\n    name: rate.NAME[0],\r\n    country: rate.COUNTRY[0],\r\n    id: rate.ID ? rate.ID[0] : '',\r\n    weBuy: rate.WEBUY[0],\r\n    weSell: rate.WESELL[0],\r\n    invBuy: rate.INVBUY[0],\r\n    invSell: rate.INVSELL[0]\r\n  }));\r\n\r\n  return { timestamp, rates }\r\n}\r\n\r\nconst getCatalog = async (setCatalog) => {\r\n  const res = await axios.get('rateswithcss.xml', {\r\n    headers: { 'Cache-Control': 'no-cache' }\r\n  });\r\n  const xml = await parseXML(res.data);\r\n  setCatalog(cleanCatalog(xml.CATALOG));\r\n};\r\n\r\nconst useCatalog = () => {\r\n  const [catalog, setCatalog] = useState({});\r\n\r\n  useEffect(() => {\r\n    getCatalog(setCatalog)\r\n    const interval = setInterval(() => getCatalog(setCatalog), 5000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return catalog\r\n}\r\n\r\nexport default useCatalog","import {\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  TableFooter\r\n} from '@material-ui/core'\r\nimport styled from 'styled-components'\r\n\r\nimport useConfig from '../hooks/useConfig'\r\nimport useCatalog from '../hooks/useCatalog'\r\n\r\nconst Container = styled.div`\r\n  background-color: ${props => props.colour};\r\n  min-height: 100vh;\r\n  padding: 0.25rem;\r\n`\r\nconst Image = styled.img`\r\n  display: block;\r\n  margin: auto;\r\n  max-height: 10rem;\r\n`\r\nconst PaperContainer = styled(Paper)`\r\n  overflow: auto;\r\n  margin: 0.5rem;\r\n\r\n  th {\r\n    font-weight: bold;\r\n  }\r\n\r\n  th, td {\r\n    font-size: x-large;\r\n  }\r\n`\r\nconst ColouredTableCell = styled(TableCell)`\r\n  color: ${props => props.fontColour} !important;\r\n  background-color: ${props => props.colour};\r\n  border-bottom-color: ${props => props.borderColour} !important;\r\n`\r\n\r\nfunction RateBoard({ config }) {\r\n  const jsonConfig = useConfig();\r\n  const catalog = useCatalog();\r\n\r\n  config = config || jsonConfig;\r\n\r\n  const tableHead = config.tableHead || [];\r\n  const colour = config.colour || {};\r\n\r\n  const timestamp = catalog.timestamp || '';\r\n  const rates = catalog.rates || [];\r\n\r\n  return (\r\n    <Container colour={colour.background}>\r\n      <div>\r\n        <Image src={config.logo} alt=\"logo\" />\r\n      </div>\r\n\r\n      <PaperContainer elevation={3}>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {tableHead.map((col, i) => (\r\n                  <ColouredTableCell \r\n                    key={col.key} \r\n                    align={col.align} \r\n                    colour={colour.header}\r\n                    borderColour={colour.divider}\r\n                    fontColour={colour.font}\r\n                  >\r\n                    {col.title}\r\n                  </ColouredTableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {rates.filter(rate => rate.isFlagged).map((rate, i) => (\r\n                <TableRow key={rate.iso}>\r\n                  {tableHead.map(col => (\r\n                    <ColouredTableCell \r\n                      key={`${rate.iso}-${col.key}`} \r\n                      align={col.align}\r\n                      colour={!!(i%2) ? colour.odd : colour.even}\r\n                      borderColour={colour.divider}\r\n                      fontColour={colour.font}\r\n                    >\r\n                      {rate[col.key]}\r\n                    </ColouredTableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n\r\n            <TableFooter>\r\n              <TableRow>\r\n                <ColouredTableCell \r\n                  colSpan={tableHead.length}\r\n                  colour={colour.footer}\r\n                  borderColour={colour.footer}\r\n                  fontColour={colour.font}\r\n                >\r\n                  {timestamp}\r\n                </ColouredTableCell>\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </PaperContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RateBoard;\r\n","import { useState, useEffect } from 'react'\r\nimport fileDownload from 'js-file-download'\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  Tabs,\r\n  Tab\r\n} from '@material-ui/core'\r\nimport { \r\n  AddCircle as AddCircleIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Delete as DeleteIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n  SettingsBackupRestore as SettingsBackupRestoreIcon\r\n} from '@material-ui/icons'\r\nimport styled from 'styled-components'\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\nimport RateBoard from './RateBoard'\r\nimport useConfig from '../hooks/useConfig'\r\n\r\nconst Container = styled.div`\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n`\r\nconst PaperContainer = styled(Paper)`\r\n  margin: 0.5rem;\r\n  padding: 1rem;\r\n`\r\nconst SubTitle = styled.h2`\r\n  text-align: center;\r\n  margin: 0;\r\n  margin-bottom: 1rem;\r\n`\r\nconst PaperCard = styled(Paper)`\r\n  padding: 0.5rem;\r\n  width: 10rem;\r\n`\r\nconst AddColumnContainer = styled(Paper)`\r\n  width: calc(10rem + 16px);\r\n  height: 100%;\r\n  min-height: 12rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #f9f9f9;\r\n  }\r\n`\r\nconst IconHover = styled.div`\r\n  width: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  svg {\r\n    ${props => props.display ? '' : 'display: none;'}\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`\r\nconst CenterButtonContainer = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst TextFieldContainer = styled.div`\r\n  width: 7rem;\r\n`\r\n\r\nconst colourColumns = [\r\n  { label: 'Background', key: 'background'},\r\n  { label: 'Header', key: 'header'},\r\n  { label: 'Even Row', key: 'even'},\r\n  { label: 'Odd Row', key: 'odd'},\r\n  { label: 'Divider', key: 'divider'},\r\n  { label: 'Font', key: 'font'},\r\n  { label: 'Footer', key: 'footer'},\r\n]\r\n\r\nconst miscColumns = [\r\n  { label: 'Logo', key: 'logo' }\r\n]\r\n\r\nconst Config = () => {\r\n  const defaultConfig = useConfig();\r\n  const [config, setConfig] = useState({});\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [tabValue, setTabValue] = useState('columns')\r\n\r\n  const tableColumns = config.tableHead || [];\r\n  const tableColours = config.colour || {};\r\n\r\n  useEffect(() => {\r\n    setConfig(defaultConfig)\r\n  }, [defaultConfig]);\r\n\r\n  const onColumnChange = (event, index, key) => {\r\n    const tableHead = [...tableColumns]\r\n    tableHead.splice(index, 1, { \r\n      ...tableColumns[index], \r\n      [key]: event.target.value \r\n    })\r\n    setConfig(old => ({ ...old, tableHead }))\r\n  }\r\n\r\n  const onColumnShift = (index, shift) => {\r\n    const tableHead = [...tableColumns];\r\n    const item = tableHead.splice(index, 1)\r\n    tableHead.splice(index + shift, 0, item[0])\r\n    setConfig(old => ({ ...old, tableHead }))\r\n  }\r\n\r\n  const onColumnRemove = (index) => {\r\n    const tableHead = [...tableColumns]\r\n    tableHead.splice(index, 1)\r\n    setConfig(old => ({ ...old, tableHead }))\r\n  }\r\n\r\n  const onChangeColour = (key, value) => {\r\n    if (value) {\r\n      setConfig(old => ({ \r\n        ...old, \r\n        colour: { \r\n          ...old.colour,\r\n          [key]: value\r\n        } \r\n      }))\r\n    }\r\n  }\r\n\r\n  const onResetColour = (key) => {\r\n    setConfig(old => ({ \r\n      ...old, \r\n      colour: { \r\n        ...old.colour,\r\n        [key]: defaultConfig.colour[key]\r\n      } \r\n    }))\r\n  }\r\n\r\n  const onChangeMisc = (event, key) => {\r\n    setConfig(old => ({\r\n      ...old,\r\n      [key]: event.target.value\r\n    }))\r\n  }\r\n\r\n  const onResetMisc = (key) => {\r\n    setConfig(old => ({\r\n      ...old,\r\n      [key]: defaultConfig[key]\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Rate Board Configuration</h1>\r\n\r\n      <PaperContainer elevation={3} style={{ padding: 0 }}>\r\n        <Tabs\r\n          value={tabValue}\r\n          onChange={(e, value) => setTabValue(value)}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab value=\"columns\" label=\"Columns\" />\r\n          <Tab value=\"colours\" label=\"Colours\" />\r\n          <Tab value=\"misc\" label=\"Misc\" />\r\n        </Tabs>\r\n      </PaperContainer>\r\n\r\n      <PaperContainer elevation={3}>\r\n        {tabValue === 'columns' && (\r\n          <>\r\n          <SubTitle>Columns</SubTitle>\r\n\r\n          <Grid container direction=\"row\" spacing={2}>\r\n            \r\n            {tableColumns.map((col, index) => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <Grid container spacing={1} direction=\"column\" justify=\"\" alignItems=\"stretch\">\r\n  \r\n                    <Grid item>\r\n                      <Grid container direction=\"row\" justify=\"space-between\">\r\n                        <Grid item>\r\n                          <IconHover display={index !== 0}>\r\n                            <ArrowBackIcon onClick={() => onColumnShift(index, -1)} />\r\n                          </IconHover>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <IconHover display>\r\n                            <DeleteIcon onClick={() => onColumnRemove(index)} />\r\n                          </IconHover>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <IconHover display={index !== tableColumns.length - 1}>\r\n                            <ArrowForwardIcon onClick={() => onColumnShift(index, 1)} />\r\n                          </IconHover>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n  \r\n                    <Grid item>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"field-select-label\">Field</InputLabel>\r\n                        <Select\r\n                          labelId=\"field-select-label\"\r\n                          id=\"field-select\"\r\n                          value={col.key}\r\n                          onChange={e => onColumnChange(e, index, 'key')}\r\n                        >\r\n                          <MenuItem value={'flag'}>Flag</MenuItem>\r\n                          <MenuItem value={'iso'}>ISO</MenuItem>\r\n                          <MenuItem value={'name'}>Name</MenuItem>\r\n                          <MenuItem value={'country'}>Country</MenuItem>\r\n                          <MenuItem value={'weBuy'}>We Buy</MenuItem>\r\n                          <MenuItem value={'weSell'}>We Sell</MenuItem>\r\n                          <MenuItem value={'invBuy'}>Inv Buy</MenuItem>\r\n                          <MenuItem value={'invSell'}>Inv Sell</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n  \r\n                    <Grid item>\r\n                      <TextField \r\n                        label=\"Field Name\"\r\n                        value={col.title}\r\n                        onChange={e => onColumnChange(e, index, 'title')}\r\n                      />\r\n                    </Grid>\r\n  \r\n                    <Grid item>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"align-select-label\">Align</InputLabel>\r\n                        <Select\r\n                          labelId=\"align-select-label\"\r\n                          id=\"align-select\"\r\n                          value={col.align}\r\n                          onChange={e => onColumnChange(e, index, 'align')}\r\n                          defaultValue='left'\r\n                        >\r\n                          <MenuItem value={'center'}>Center</MenuItem>\r\n                          <MenuItem value={'left'}>Left</MenuItem>\r\n                          <MenuItem value={'right'}>Right</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n  \r\n                  </Grid>\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n  \r\n            <Grid item>\r\n              <AddColumnContainer onClick={() => setConfig(old => ({\r\n                  ...old, \r\n                  tableHead: [...tableColumns, { title: '', key: '', align: 'left' }] \r\n                }))}\r\n              >\r\n                <AddCircleIcon fontSize=\"large\" />\r\n              </AddColumnContainer>\r\n            </Grid>\r\n          </Grid>\r\n          </>\r\n        )}\r\n        \r\n        {tabValue === 'colours' && (\r\n          <>\r\n          <SubTitle>Colours</SubTitle>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n            {colourColumns.map(col => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                    <Grid item>\r\n                      <TextFieldContainer>\r\n                        <ColorPicker \r\n                          label={col.label}\r\n                          defaultValue=\"#000\"\r\n                          value={tableColours[col.key]}\r\n                          TextFieldProps={{ value: tableColours[col.key] }}\r\n                          onChange={color => onChangeColour(col.key, color)}\r\n                        />\r\n                      </TextFieldContainer>\r\n                    </Grid>\r\n  \r\n                    <Grid item>\r\n                      <IconHover display>\r\n                        <SettingsBackupRestoreIcon onClick={() => onResetColour(col.key)} />\r\n                      </IconHover>\r\n                    </Grid>\r\n                  </Grid>\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          </>\r\n        )}\r\n\r\n        {tabValue === 'misc' && (\r\n          <>\r\n          <SubTitle>Miscellaneous</SubTitle>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n            {miscColumns.map(col => (\r\n              <Grid item>\r\n                <PaperCard elevation={1}>\r\n                  <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                    <Grid item>\r\n                      <TextFieldContainer>\r\n                        <TextField \r\n                          label={col.label}\r\n                          value={config.logo}\r\n                          onChange={e => onChangeMisc(e, col.key)}\r\n                        />\r\n                      </TextFieldContainer>\r\n                    </Grid>\r\n  \r\n                    <Grid item>\r\n                      <IconHover display>\r\n                        <SettingsBackupRestoreIcon onClick={() => onResetMisc(col.key)} />\r\n                      </IconHover>\r\n                    </Grid>\r\n                  </Grid>\r\n                </PaperCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          </>\r\n        )}\r\n      </PaperContainer>\r\n\r\n      <CenterButtonContainer>\r\n        <Button \r\n          color=\"primary\"\r\n          onClick={() => setShowPreview(x => !x)}\r\n        >Toggle Preview</Button>\r\n      </CenterButtonContainer>\r\n\r\n      {showPreview && <RateBoard config={config} />}\r\n\r\n      <CenterButtonContainer>\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          onClick={() => fileDownload(JSON.stringify(config), 'config.json')}\r\n        >\r\n          Download\r\n        </Button>\r\n      </CenterButtonContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Config","import { useState, useEffect } from 'react'\r\n\r\nconst useLocationHash = () => {\r\n    const [hash, setHash] = useState(window.location.hash);\r\n\r\n    useEffect(() => {\r\n      window.onhashchange = (event => {\r\n        setHash(event.target.location.hash)\r\n      })\r\n    }, [])\r\n\r\n    return hash\r\n  }\r\n\r\nexport default useLocationHash","import RateBoard from './pages/RateBoard'\nimport Config from './pages/Config'\nimport useLocationHash from './hooks/useLocationHash'\n\nfunction App() {\n  const hash = useLocationHash()\n  switch (hash) {\n    case '#config':\n      return <Config />\n    default: \n      return <RateBoard />\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}